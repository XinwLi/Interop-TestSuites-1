<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns1:ReqTable xmlns:ns1="http://schemas.microsoft.com/windows/ProtocolsTest/2007/07/RequirementTable">
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1798</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The client implementation has to have the network address of the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1799</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] This network address [the network address of the server] satisfies the requirements of a network address for the underlying transport of remote procedure call (RPC).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1800</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] This [network address] allows the client to initiate communication with the server by using the RPC Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1801</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] This protocol uses security information as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1802</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The client and Exchange NSPI server are required to share one or both of the NT LAN Manager (NTLM) Authentication Protocol or Kerberos security providers (2) in common for the RPC transport.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1803</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] Additionally, the server is required to register the negotiation security provider.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1804</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The protocol does not require mutual authentication.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1805</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The client and Exchange NSPI server use an authentication mechanism that is capable of authenticating the client to the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1806</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The protocol does not require that the client be capable of authenticating the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1807</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The credentials of the client have to be recognized by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1808</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] These credentials [the credentials of the client] are obtained from the shared security provider (2).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1809</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The mechanism for obtaining these credentials [the credentials of the client] is specific to the protocol of the security provider that is used.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1810</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The server has to have determined any local policies as described in sections 2, 3, and 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1811</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] This [determine any local policies] allows the server to provide consistent behavior for all communications in the protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1812</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The server has to be configured to support the required code pages and language code identifiers (LCIDs), as described in sections 2.2.4 and 2.2.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1813</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] This [The server is configured to support the required code pages and language code identifiers (LCIDs)] allows the server to provide the minimal required string conversions and sort orders.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1814</ns1:REQ_ID>
		<ns1:Doc_Sect>1.5</ns1:Doc_Sect>
		<ns1:Description>[In Prerequisites/Preconditions] The server has to be started and fully initialized before the protocol can start.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1815</ns1:REQ_ID>
		<ns1:Doc_Sect>1.9</ns1:Doc_Sect>
		<ns1:Description>[In Standards Assignments] The value of Interface UUID is F5CC5A18-4264-101A-8C59-08002B2F8426, and its reference is [C706] section A.2.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R8.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1</ns1:REQ_ID>
		<ns1:Doc_Sect>2</ns1:Doc_Sect>
		<ns1:Description>[In Messages] The following sections specify transport methods of Exchange Server NSPI Protocol messages and common Exchange Server NSPI Protocol data types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2</ns1:REQ_ID>
		<ns1:Doc_Sect>2</ns1:Doc_Sect>
		<ns1:Description>[In Messages] Unless otherwise specified, all numeric values in this specification are in little-endian format.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R3</ns1:REQ_ID>
		<ns1:Doc_Sect>2</ns1:Doc_Sect>
		<ns1:Description>[In Messages] Unless otherwise specified, all Unicode string representations are in UTF-16LE format.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R4</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] All remote procedure call (RPC) protocols use RPC dynamic endpoints (2) and well-known endpoints (2), as specified in [C706].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1502</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The Exchange Server NSPI Protocol uses the following RPC protocol sequences: RPC over HTTPS.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1989</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The Exchange Server NSPI Protocol uses the following RPC protocol sequences: RPC over TCP.&lt;1&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXNSPI_R1877.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R5</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The protocol allows a server to be configured to use a specific port for RPC over TCP.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R6</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The mechanism for configuring a server to use a specific port is not constrained by the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R7</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The mechanism for a client to discover this configured TCP port is not constrained by the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R7001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] For the network protocol sequence RPC over HTTPS, this protocol MUST use the well-known endpoint 6004. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R7002</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] For RPC over TCP, this protocol can use RPC dynamic endpoints, as defined in Part 4 of [C706].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R8</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] This protocol MUST use the UUID F5CC5A18-4264-101A-8C59-08002B2F8426.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R9</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The protocol MUST use the RPC version number 56.0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R17</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The protocol uses the underlying RPC protocol to retrieve the identity of the client that made the method call, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R18</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The server MAY use this identity [the identity of the client that made the method call] to perform access checks, as described in section 5 of this document.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R19</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1</ns1:Doc_Sect>
		<ns1:Description>[In Transport] The server MAY enforce limits on the maximum RPC packet size that it [server] will accept.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R130</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] This protocol enables the ms_union extension, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R131</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] This protocol requests that the RPC runtime, via the strict_context_handle attribute, rejects the use of context handles created by a method of a different RPC interface than this one, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R132</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] In addition to the RPC base types and definitions specified in [C706] and [MS-RPCE], the Exchange Server NSPI Protocol uses additional data types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1562, MS-OXNSPI_R1563, MS-OXNSPI_R1564, MS-OXNSPI_R1565, MS-OXNSPI_R1567, MS-OXNSPI_R1568, MS-OXNSPI_R1570, MS-OXNSPI_R1572, MS-OXNSPI_R1573, MS-OXNSPI_R1574, MS-OXNSPI_R1575, MS-OXNSPI_R1587, MS-OXNSPI_R1591, MS-OXNSPI_R1592.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R133</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] The following table summarizes the types [FlatUID_r, PropertyTagArray_r, Binary_r, ShortArray_r, LongArray_r, StringArray_r, BinaryArray_r, FlatUIDArray_r, WStringArray_r, DateTimeArray_r, PROP_VAL_UNION, PropertyValue_r, PropertyRow_r, PropertyRowSet_r, AndRestriction_r, OrRestriction_r, NotRestriction_r, ContentRestriction_r, PropertyRestriction_r, ExistRestriction_r, RestrictionUnion_r, Restriction_r, PropertyName_r, StringsArray_r, WStringsArray_r, STAT, MinimalEntryID, EphemeralEntryID, PermanentEntryID and NSPI_HANDLE] that are defined in this specification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1531</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] FlatUID_r data type: Byte order specified GUIDs.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1532</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyTagArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1533</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] Binary_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1534</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] ShortArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1535</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] LongArray_r:  Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1536</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] StringArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1537</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] BinaryArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1538</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] FlatUIDArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1539</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] WStringArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1540</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] DateTimeArray_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1541</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PROP_VAL_UNION: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1542</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyValue_r: Property value structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1543</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyRow_r: Table row structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1544</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyRowSet_r: Table rows structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1545</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] AndRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1546</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] OrRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1547</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] NotRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1548</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] ContentRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1549</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1550</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] ExistRestriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1551</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] RestrictionUnion_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1552</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] Restriction_r: Table restriction structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1553</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PropertyName_r: Address book property specifier.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1555</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] StringsArray_r: Collection of 8-bit character strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1556</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] WStringsArray_r: Collection of Unicode strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1557</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] STAT: Table status structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1558</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] MinimalEntryID: Address Book object identification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1559</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] EphemeralEntryID: Address Book object identification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1560</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] PermanentEntryID: Address Book object identification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1561</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2</ns1:Doc_Sect>
		<ns1:Description>[In Common Data Types] NSPI_HANDLE: RPC context handle.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R20</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Constant Value Definitions] This section defines common values that are used in multiple messages.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R21</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The property type values [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString] specified in this section are used to specify property types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1505, MS-OXNSPI_R1506, MS-OXNSPI_R1507, MS-OXNSPI_R1508, MS-OXNSPI_R1509, MS-OXNSPI_R1511, MS-OXNSPI_R1512, MS-OXNSPI_R1515, MS-OXNSPI_R1516, MS-OXNSPI_R1517.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R22</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] They [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString] appear in various places in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R23</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] All Exchange NSPI servers and clients MUST recognize and be capable of accepting and returning these property types [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1656.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1656</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The Exchange NSPI server under test MUST be capable of returning these property types [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString].</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R23:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R24</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] Values [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString] that represent property types are defined in [MS-OXCDATA].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R25</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The values specified in [MS-OXCDATA] are 16-bit integers.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R26</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The Exchange Server NSPI Protocol uses the same numeric values [The values specified in [MS-OXCDATA] are 16-bit integers] but expressed as 32-bit integers.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R27</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The high-order 16 bits of the 32-bit representation that is used by the Exchange Server NSPI Protocol are always 0x0000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R28</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The following table lists the permitted values [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString] for the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1505</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypInteger32 defined in [MS-OXCDATA] section 2.11.1 is 0x0003 but 0x00000003 is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1506</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypBoolean defined in [MS-OXCDATA] section 2.11.1 is 0x000B but 0x0000000B is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1507</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypString8 defined in [MS-OXCDATA] section 2.11.1 is 0x001E but 0x0000001E is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1508</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypBinary defined in [MS-OXCDATA] section 2.11.1 is 0x0102 but 0x00000102 is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1509</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypString defined in [MS-OXCDATA] section 2.11.1 is 0x001F but 0x0000001F is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1511</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypTime defined in [MS-OXCDATA] section 2.11.1 is 0x0040 but 0x00000040 is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1512</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypErrorCode defined in [MS-OXCDATA] section 2.11.1 is 0x000A but 0x0000000A is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1515</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypMultipleString8 defined in [MS-OXCDATA] section 2.11.1 is 0x101E but 0x0000101E is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1516</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypMultipleBinary defined in [MS-OXCDATA] section 2.11.1 is 0x1102 but 0x00001102 is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1517</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypMultipleString defined in [MS-OXCDATA] section 2.11.1 is 0x101F but 0x0000101F is used in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R29</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] In addition, all Exchange NSPI servers and clients MUST recognize and be capable of accepting and returning the property types that are listed in the following table [PtypEmbeddedTable, PtypNull and PtypUnspecified].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1657.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1657</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] In addition to the property types that are defined in [MS-OXCDATA], the Exchange NSPI server under test MUST be capable of returning the property types [PtypEmbeddedTable, PtypNull and PtypUnspecified] that are listed in the following table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R29:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R31</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] PtypEmbeddedTable ([MS-OXCDATA] section 2.11.1.5) property type with 0x0000000D value means single 32-bit value, referencing an address list.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R33</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] [PtypNull ([MS-OXCDATA] section 2.11.1) property type with 0x00000001 value] Clients MUST NOT specify this property type in any method's input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R34</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] [PtypNull ([MS-OXCDATA] section 2.11.1) property type with 0x00000001 value] The server MUST specify this property type in any method's output parameters to indicate that a property has a value that cannot be expressed in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R36</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] [PtypUnspecified ([MS-OXCDATA] section 2.11.1) property type with 0x00000000 value] Clients specify this property type in a method's input parameter to indicate that the client will accept any property type the server chooses when returning propvalues.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R37</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] [PtypUnspecified ([MS-OXCDATA] section 2.11.1) property type with 0x00000000 value] Servers MUST NOT specify this property type in any method's output parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R38</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] All clients and servers MUST NOT use any other property types [other than PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1658.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1658</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Property Type Values] The server under test MUST use the following property types [PtypInteger32, PtypBoolean, PtypString8, PtypBinary, PtypString, PtypTime, PtypErrorCode, PtypMultipleString8, PtypMultipleBinary and PtypMultipleString].</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R38:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R39</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] The error code values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] listed in this section are used to specify status from an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R40</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] They [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] appear as return codes from NSPI methods and as values of properties with property type PtypErrorCode ([MS-OXCDATA] section 2.11.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1659</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] All Exchange NSPI servers MUST recognize and be capable of accepting and returning these error codes [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R897, MS-OXCDATA_R2070, MS-OXCDATA_R899, MS-OXCDATA_R927, MS-OXCDATA_R937, MS-OXCDATA_R947, MS-OXCDATA_R949, MS-OXCDATA_R965, MS-OXCDATA_R973, MS-OXCDATA_R975, MS-OXCDATA_R989, MS-OXCDATA_R991, MS-OXCDATA_R907, MS-OXCDATA_R903.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R42</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] The values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] that represent the error codes are defined in [MS-OXCDATA] section 2.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R897, MS-OXCDATA_R2070, MS-OXCDATA_R899, MS-OXCDATA_R927, MS-OXCDATA_R937, MS-OXCDATA_R947, MS-OXCDATA_R949, MS-OXCDATA_R965, MS-OXCDATA_R973, MS-OXCDATA_R975, MS-OXCDATA_R989, MS-OXCDATA_R991, MS-OXCDATA_R907, MS-OXCDATA_R903.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1520</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] The following are the permitted error code values for the Exchange Server NSPI Protocol: Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory, InvalidParameter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R897, MS-OXCDATA_R2070, MS-OXCDATA_R899, MS-OXCDATA_R927, MS-OXCDATA_R937, MS-OXCDATA_R947, MS-OXCDATA_R949, MS-OXCDATA_R965, MS-OXCDATA_R973, MS-OXCDATA_R975, MS-OXCDATA_R989, MS-OXCDATA_R991, MS-OXCDATA_R907, MS-OXCDATA_R903.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R43</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] All clients and servers MUST NOT use any other error codes [other than Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1661.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1661</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Permitted Error Code Values] The server under test MUST use the following error codes [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] in the return value of the operation.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R43:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R44</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] The values [DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE, DT_SEARCH] listed in this section are used to specify display types.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R45</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] They [DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE, DT_SEARCH] appear in various places in the Exchange Server NSPI Protocol as object properties and as part of EntryIDs.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R46</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Except where otherwise specified in the following table, all Exchange NSPI servers MUST recognize and be capable of accepting and returning these display types. [DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE, DT_SEARCH]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1662.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1662</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Except where otherwise specified in the following table, the Exchange NSPI server under test MUST be capable of returning these display types [DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE, DT_SEARCH].</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R46:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1816</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] The following table lists the permitted display type values [0x00000000, 0x00000001, 0x00000002, 0x00000003, 0x00000004, 0x00000005, 0x00000006, 0x00000100, 0x00000101, 0x00000102 and 0x00000200] for the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R48</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_MAILUSER display type name with 0x00000000 means a typical messaging user.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R49</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_DISTLIST display type name with 0x00000001 means a distribution list.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R50</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_FORUM display type with 0x00000002 value means a forum, such as a bulletin board service or a public or shared folder.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R51</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_AGENT display type with 0x00000003 value means an automated agent, such as Quote-Of-The-Day or a weather chart display.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R52</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_ORGANIZATION display type with 0x00000004 value means an Address Book object defined for a large group, such as helpdesk, accounting, coordinator, or department.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R53</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_ORGANIZATION] Department objects usually have this display type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R53001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_ORGANIZATION] An Exchange NSPI server MUST NOT return display type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R54</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_PRIVATE_DISTLIST display type with 0x00000005 value means a private, personally administered distribution list.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R55</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_REMOTE_MAILUSER display type with 0x00000006 value means an Address Book object known to be from a foreign or remote messaging system.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R56</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_CONTAINER display type with 0x00000100 value means an address book hierarchy table container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R57</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_CONTAINER display type] An Exchange NSPI server MUST NOT return this display type except as part of an EntryID of an object in the address book hierarchy table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXNSPI_R1998, MS-OXNSPI_R1999.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1998</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Exchange NSPI server will return display type DT_CONTAINER as part of an EntryID of an object in the address book hierarchy table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R57:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1999</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Exchange NSPI server will not return display type DT_CONTAINER as part of an EntryID of an object if the table is not the address book hierarchy table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R57:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R58</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_TEMPLATE display type with 0x00000101 value means a display template object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R59</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_TEMPLATE display type] An Exchange NSPI server MUST NOT return this display type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R60</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_ADDRESS_TEMPLATE display type with 0x00000102 value means an address creation template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R61</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_ADDRESS_TEMPLATE display type] An Exchange NSPI server MUST NOT return this display type except as part of an EntryID of an object in the Address Creation Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXNSPI_R1996, MS-OXNSPI_R1997.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1996</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Exchange NSPI server will return display type DT_ADDRESS_TEMPLATE as part of an EntryID of an object in the Address Creation Table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R61:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1997</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] Exchange NSPI server will not return display type DT_ADDRESS_TEMPLATE as part of an EntryID of an object if the table is not the Address Creation Table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R61:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R62</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] DT_SEARCH display type with 0x00000200 value means a search template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R63</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] [DT_SEARCH display type] An Exchange NSPI server MUST NOT return this display type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R64</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] All clients and servers MUST NOT use any other display types [other than DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE and DT_SEARCH].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1663.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1663</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Display Type Values] The server under test MUST use the following display types [DT_MAILUSER, DT_DISTLIST, DT_FORUM, DT_AGENT, DT_ORGANIZATION, DT_PRIVATE_DISTLIST, DT_REMOTE_MAILUSER, DT_CONTAINER, DT_TEMPLATE, DT_ADDRESS_TEMPLATE and DT_SEARCH].</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R64:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R65</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Default Language Code Identifier] The language code identifier (LCID) [NSPI_DEFAULT_LOCALE] specified in this section is associated with the minimal required sort order for Unicode strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R66</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Default Language Code Identifier] It [LCID] appears in input parameters to Exchange Server NSPI Protocol methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R67</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Default Language Code Identifier] It [LCID] affects Exchange NSPI server string handling, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R68</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Default Language Code Identifier] The following table lists and describes the default LCID [NSPI_DEFAULT_LOCALE] for this protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R69</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Default Language Code Identifier] NSPI_DEFAULT_LOCALE (0x00000409): Represents the default LCID that is used for comparison of Unicode string representations.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R70</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.5</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Pages] The required code pages [CP_TELETEX and CP_WINUNICODE] listed in this section are associated with the string handling in the Exchange Server NSPI Protocol, and they appear in input parameters to methods in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R71</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.5</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Pages] They [CP_TELETEX and CP_WINUNICODE] affect Exchange NSPI server string handling, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R680, MS-OXNSPI_R732, MS-OXNSPI_R780, MS-OXNSPI_R873, MS-OXNSPI_R935, MS-OXNSPI_R1016, MS-OXNSPI_R1101, MS-OXNSPI_R1181, MS-OXNSPI_R1223, MS-OXNSPI_R1280, MS-OXNSPI_R1359, MS-OXNSPI_R1410, MS-OXNSPI_R1467.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R72</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.5</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Pages] The following table lists the required code pages [CP_TELETEX and CP_WINUNICODE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R73</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.5</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Pages] CP_TELETEX (0x00004F25): Represents the Teletex code page.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R74</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.5</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Pages] CP_WINUNICODE (0x000004B0): Represents the Unicode code page.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1817</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] These values [NORM_IGNORECASE, NORM_IGNOREKANATYPE, NORM_IGNORENONSPACE, NORM_IGNOREWIDTH, NORM_IGNORESYMBOLS and SORT_STRINGSORT] are associated with string handling in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1818</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] These values [NORM_IGNORECASE, NORM_IGNOREKANATYPE, NORM_IGNORENONSPACE, NORM_IGNOREWIDTH, NORM_IGNORESYMBOLS and SORT_STRINGSORT] are defined in terms of definitions, as specified in 2.2.1.6.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1819</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] The server uses these flags [NSPI_DEFAULT_LOCALE_COMPARE_FLAGS and NSPI_NON_DEFAULT_LOCALE_COMPARE_FLAGS] to modify the behavior of comparisons of Unicode string representations, as detailed in section 3.1.4.3</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1820</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] Flag NSPI_DEFAULT_LOCALE_COMPARE_FLAGS has the following values: 
(NORM_IGNORECASE | \
NORM_IGNOREKANATYPE | \
NORM_IGNORENONSPACE | \
NORM_IGNOREWIDTH | \
SORT_STRINGSORT)</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1821</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] Flags [NSPI_DEFAULT_LOCALE_COMPARE_FLAGS] used when comparing Unicode strings in the language code identifier (LCID) represented by NSPI_DEFAULT_LOCALE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1822</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] The comparison flag values [NSPI_DEFAULT_LOCALE_COMPARE_FLAGS] are defined in section 2.2.6.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1823</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] Flag NSPI_NON_DEFAULT_LOCALE_COMPARE_FLAGS has the following values: 
(NORM_IGNORECASE | \
NORM_IGNOREKANATYPE | \
NORM_IGNORENONSPACE | \
NORM_IGNOREWIDTH | \
NORM_IGNORESYMBOLS | \
SORT_STRINGSORT)</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1824</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] [NSPI_NON_DEFAULT_LOCALE_COMPARE_FLAGS] Flags used when comparing Unicode strings in any LCID except the LCID represented by NSPI_DEFAULT_LOCALE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1825</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6</ns1:Doc_Sect>
		<ns1:Description>[In Unicode Comparison Flags] [NSPI_NON_DEFAULT_LOCALE_COMPARE_FLAGS] The comparison flag values are defined in section 2.2.1.6.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1826</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] The following defines the bit settings and meaning of the bits used by the Unicode comparison flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1827</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] The flags are presented in big-endian byte order.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1828</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] V (1 bit): NORM IGNORECASE: Ignore Case.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1829</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] U (1 bit): NORM IGNORENONSPACE: Ignore non-spacing characters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1830</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] T (1 bit): NORM IGNORESYMBOLS: Ignore symbols.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1831</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] S (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1832</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] R (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1833</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] Q (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1834</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] P (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1835</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] O (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1836</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] N (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1837</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] M (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1838</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] L (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1839</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] K (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1840</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] J (1 bit): SORT STRINGSORT: Treat punctuation the same as symbols.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1841</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] I (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1842</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] H (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1843</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] G (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1844</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] F (1 bit): NORM IGNOREKANATYPE: Do not differentiate between hiragana and katakana characters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1845</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] [F (1 bit): NORM IGNOREKANATYPE] Corresponding hiragana and katakana characters compare as equal.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1846</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] E (1 bit): NORM IGNOREWIDTH: Ignore the difference between half-width and full-width characters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1847</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] D (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1848</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] C (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1849</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] B (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1850</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] A (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1851</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 9 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1852</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 8 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1853</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 7 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1854</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 6 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1855</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 5 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1856</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 4 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1857</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 3 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1858</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 2 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1859</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 1 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1860</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.6.1</ns1:Doc_Sect>
		<ns1:Description>[In Comparison Flags] 0 (1 bit): Unused.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R75</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.7</ns1:Doc_Sect>
		<ns1:Description>[In Permanent Entry ID GUID] The following table lists the Permanent Entry ID that is associated with the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1664</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.7</ns1:Doc_Sect>
		<ns1:Description>[In Permanent Entry ID GUID] GUID_NSPI ({0xDC, 0xA7, 0x40, 0xC8, 0xC0, 0x42, 0x10, 0x1A, 0xB4, 0xB9, 0x08, 0x00, 0x2B, 0x2F, 0xE1, 0x82}): Represents the Exchange Server NSPI Protocol in Permanent Entry IDs.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R77</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] The positioning Minimal Entry IDs [MID_BEGINNING_OF_TABLE, MID_END_OF_TABLE and MID_CURRENT] are used to specify objects in the address book as a function of their positions in tables.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R80, MS-OXNSPI_R81.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R78</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] They [MID_BEGINNING_OF_TABLE, MID_END_OF_TABLE and MID_CURRENT] appear as Minimal Entry IDs in the CurrentRec field of the STAT structure, as specified in section 2.2.8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R319.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R79</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] The following table lists the possible values [MID_BEGINNING_OF_TABLE, MID_END_OF_TABLE and MID_CURRENT].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R80</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] MID_BEGINNING_OF_TABLE (0x00000000): Specifies the position before the first row in the current address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R81</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] MID_END_OF_TABLE (0x00000002): Specifies the position after the last row in the current address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R82</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] MID_CURRENT (0x00000001): Specifies the current position in a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R83</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] [MID_CURRENT] This Minimal Entry ID is only valid in the NspiUpdateStat method, as specified in section 3.1.4.1.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1742.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1742</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] [MID_CURRENT] This Minimal Entry ID is valid in the NspiUpdateStat method.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R83:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R84</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] [MID_CURRENT] In all other cases [in all the methods except NspiUpdateStat method], it is an invalid Minimal Entry ID, guaranteed to not specify any object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1985.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1985</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.8</ns1:Doc_Sect>
		<ns1:Description>[In Positioning Minimal Entry IDs] [MID_CURRENT] For method NspiGetProps, it is an invalid Minimal Entry ID, guaranteed to not specify any object in the address book.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R84:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R85</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] Ambiguous name resolution (ANR) Minimal Entry IDs [MID_UNRESOLVED, MID_AMBIGUOUS and MID_RESOLVED] are used to specify the outcome of the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R86</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] They [MID_UNRESOLVED, MID_AMBIGUOUS and MID_RESOLVED] appear in return data from the NspiResolveNames method, as specified in section 3.1.4.1.16, and the NspiResolveNamesw method, as specified in section 3.1.4.1.17.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1342, MS-OXNSPI_R1393.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R87</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] The following table lists the possible values [MID_UNRESOLVED, MID_AMBIGUOUS and MID_RESOLVED].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R88</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] MID_UNRESOLVED (0x00000000): The ANR process was unable to map a string to any objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R89</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] MID_AMBIGUOUS (0x0000001):  The ANR process mapped a string to multiple objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R90</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.9</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution Minimal Entry IDs] MID_RESOLVED (0x0000002): The ANR process mapped a string to a single object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R91</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] The following table lists the values [SortTypeDisplayName, SortTypePhoneticDisplayName, SortTypeDisplayName_RO and SortTypeDisplayName_W] that are used to specify specific sort orders for tables.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R92</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] These values [SortTypeDisplayName, SortTypePhoneticDisplayName, SortTypeDisplayName_RO and SortTypeDisplayName_W] appear in the SortType field of the STAT data structure, as specified in section 2.2.8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R93</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] SortTypeDisplayName (0x00000000): The table is sorted ascending on the PidTagDisplayName property, as specified in [MS-OXCFOLD] section 2.2.2.2.2.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R94</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] [SortTypeDisplayName] All Exchange NSPI servers MUST support this sort order [ascending on the PidTagDisplayName property] for at least one LCID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1749.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1749</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] The Exchange NSPI server under test MUST support this sort order [ascending on the PidTagDisplayName property] for the default LCID NSPI_DEFAULT_LOCALE.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R94:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R95</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] SortTypePhoneticDisplayName (0x00000003): The table is sorted ascending on the PidTagAddressBookPhoneticDisplayName property, as specified in [MS-OXOABK] section 2.2.3.9.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R96</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] [SortTypePhoneticDisplayName] Exchange NSPI servers SHOULD support this sort order [ascending on the PidTagAddressBookPhoneticDisplayName property].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R98</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] SortTypeDisplayName_RO (0x000003E8): The table is sorted ascending on the PidTagDisplayName property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R99</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] [SortTypeDisplayName_RO] The client MUST set this value only when using the NspiGetMatches method, as specified in section 3.1.4.1.10, to open a nonwritable table on an object-valued property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R100</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] SortTypeDisplayName_W (0x000003E9): The table is sorted ascending on the PidTagDisplayName property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.10</ns1:Doc_Sect>
		<ns1:Description>[In Table Sort Orders] [SortTypeDisplayName_W] The client MUST set this value only when using the NspiGetMatches method to open a writable table on an object-valued property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R102</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.11</ns1:Doc_Sect>
		<ns1:Description>[In Retrieve Property Flags] The following table lists the property flag values [fSkipObjects and fEphID] that are used to specify optional behavior to a server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R103</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.11</ns1:Doc_Sect>
		<ns1:Description>[In Retrieve Property Flags] They [fSkipObjects and fEphID] appear as bit flags in methods that return property values to the client (NspiGetPropList, NspiGetProps, and NspiQueryRows).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R104</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.11</ns1:Doc_Sect>
		<ns1:Description>[In Retrieve Property Flags] fSkipObjects (0x00000001): Client requires that the server MUST NOT include proptags with the PtypEmbeddedTable property type in any lists of proptags that the server creates on behalf of the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R105</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.11</ns1:Doc_Sect>
		<ns1:Description>[In Retrieve Property Flags] fEphID (0x00000002): Client requires that the server MUST return Entry ID values in Ephemeral Entry ID form.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R106</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] NspiGetSpecialTable flag values [NspiAddressCreationTemplates and NspiUnicodeStrings] are used to specify optional behavior to a server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R107</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] They [NspiAddressCreationTemplates
 and NspiUnicodeStrings] appear as bit flags in the NspiGetSpecialTable method, as specified in section 3.1.4.1.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R108</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] The following table lists the possible values [NspiAddressCreationTemplates and NspiUnicodeStrings].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R109</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] NspiAddressCreationTemplates (0x00000002): Specifies that the server MUST return the table of the available address creation templates.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R110</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] NspiAddressCreationTemplates (0x00000002): Specifying this flag causes the server to ignore the NspiUnicodeStrings flag.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R111</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable Flags] NspiUnicodeStrings (0x00000004): Specifies that the server MUST return all strings as Unicode representations rather than as multibyte strings in the client's code page.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R112</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns Flag] The NspiQueryColumns flag value [NspiUnicodeProptypes] is used to specify optional behavior to a server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R113</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns Flag] It [the NspiQueryColumns flag] appears as a bit flag in the NspiQueryColumns method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R114</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns Flag] The following table lists the value [NspiUnicodeProptypes] for this flag [NspiQueryColumns].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R115</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns Flag] NspiUnicodeProptypes (0x80000000): Specifies that the server MUST return all proptags that specify values with string representations as having the PtypString property type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R116</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns Flag] If the NspiUnicodeProptypes flag is not set, the server MUST return all proptags specifying values with string representations as having the PtypString8 property type. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R117</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] The NspiGetTemplateInfo flag values [TI_TEMPLATE, TI_SCRIPT, TI_EMT, TI_HELPFILE_NAME and TI_HELPFILE_CONTENTS] are used to specify optional behavior to a server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R118</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] They [TI_TEMPLATE, TI_SCRIPT, TI_EMT, TI_HELPFILE_NAME and TI_HELPFILE_CONTENTS] appear as bit flags in the NspiGetTemplateInfo method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R119</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] The following table lists the possible values [TI_TEMPLATE, TI_SCRIPT, TI_EMT, TI_HELPFILE_NAME and TI_HELPFILE_CONTENTS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R120</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] TI_TEMPLATE (0x00000001): Specifies that the server is to return the value that represents a template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R121</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] TI_SCRIPT (0x00000004): Specifies that the server is to return the value of the script that is associated with a template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R122</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] TI_EMT (0x00000010): Specifies that the server is to return the e-mail type that is associated with a template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R123</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] TI_HELPFILE_NAME (0x00000020): Specifies that the server is to return the name of the help file that is associated with a template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R124</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo Flags] TI_HELPFILE_CONTENTS (0x00000040): Specifies that the server is to return the contents of the help file that is associated with a template.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R125</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt Flags] The NspiModLinkAtt flag value is used to specify optional behavior to a server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R126</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt Flags] It [the NspiModLinkAtt flag] appears as a bit flag in the NspiModLinkAtt method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R127</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt Flags] The following table lists the value [fDelete] of the flag.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R128</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt Flags] fDelete (0x00000001): Specifies that the server is to remove values when modifying.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R129</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt Flags] If the fDelete flag is not set, the server adds values when modifying.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R134</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Values] The following structures [FlatUID_r, PropertyTagArray_r, Binary_r, ShortArray_r, LongArray_r, StringArray_r, BinaryArray_r, FlatUIDArray_r, WStringArray_r, DateTimeArray_r, PROP_VAL_UNION and PropertyValue_r] are used to represent specific property values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R135</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.1</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID_r Structure] The FlatUID_r structure is an encoding of the FlatUID_r data structure defined in [MS-OXCDATA] section 2.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R10.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R136</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID_r Structure] The semantic meaning is unchanged from the FlatUID data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1562</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID_r Structure] [The type is defined as following:]  
typedef struct {
BYTE ab[16];
} FlatUID_r</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R137</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID_r Structure] ab: Encodes the ordered bytes of the FlatUID data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R10.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R138</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] The PropertyTagArray_r structure is an encoding of the PropTagArray_r data structure defined in [MS-OXCDATA] section 2.10.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R189, MS-OXCDATA_R191.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R139</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] The permissible number of proptag values in the PropertyTagArray_r structure exceeds that of the PropertyTagArray_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R140</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] The semantic meaning is otherwise unchanged from the PropertyTagArray_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1563</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] [The type is defined as following:]  typedef struct PropertyTagArray_r {
DWORD cValues;
 size_is(cValues+1), length_is(cValues)] 
    DWORD aulPropTag[];
} PropertyTagArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R141</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] cValues: Encodes the Count field of the PropertyTagArray_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R189.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R143</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] aulPropTag: Encodes the PropertyTags field of the PropertyTagArray_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R191.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R144</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Binary_r Structure] The Binary_r structure encodes an array of uninterpreted bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1564</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Binary_r Structure] [The type is defined as following:] 
typedef struct Binary_r {
  [range(0,2097152)] DWORD cb;
  [size_is(cb)] BYTE* lpb;
} Binary_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R145</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Binary_r Structure] cb: The number of uninterpreted bytes represented in this structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R146</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Binary_r Structure] [cb] This value MUST NOT exceed 2,097,152.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R147</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In Binary_r Structure] lpb: The uninterpreted bytes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R148</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In ShortArray_r Structure] The ShortArray_r structure encodes an array of 16-bit integers.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1565</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In ShortArray_r Structure] [The type is defined as following:]
typedef struct ShortArray_r {
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] short int* lpi;
} ShortArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R149</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In ShortArray_r Structure] cValues: The number of 16-bit integer values represented in the ShortArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R150</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In ShortArray_r Structure] [cValue] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R151</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In ShortArray_r Structure] lpi: The 16-bit integer values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R152</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In LongArray_r Structure] The LongArray_r structure encodes an array of 32-bit integers.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1566</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In LongArray_r Structure] [The type is defined as following:] 
typedef struct _LongArray_r {
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] long* lpl;
} LongArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R153</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In LongArray_r Structure] cValues: The number of 32-bit integers represented in this structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R154</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In LongArray_r Structure] [cValue] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R155</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In LongArray_r Structure] lpl: The 32-bit integer values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R156</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] The StringArray_r structure encodes an array of references to 8-bit character strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1567</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] [The type is defined as following:] 
typedef struct _StringArray_r {
  [range(0,100000)] DWORD cValues;
  [string, size_is(cValues)] char** lppszA;
} StringArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R157</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] cValues: The number of 8-bit character string references represented in the StringArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R158</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] [cValues] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R159</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] lppszA: The 8-bit character string references.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R160</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In StringArray_r Structure] [lppszA] The strings referred to are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R161</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In BinaryArray_r Structure] The BinaryArray_r structure is an array of Binary_r data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1568</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In BinaryArray_r Structure] [The type is defined as following:] 
typedef struct _BinaryArray_r {
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] Binary_r* lpbin;
} BinaryArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R162</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In BinaryArray_r Structure] cValues: The number of Binary_r data structures represented in the BinaryArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R163</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In BinaryArray_r Structure] [cValues] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R164</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In BinaryArray_r Structure] lpbin: The Binary_r data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R165</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In FlatUIDArray_r Structure] The FlatUIDArray_r structure encodes an array of FlatUID_r data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1569</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In FlatUIDArray_r Structure] [The type is defined as following:] 
typedef struct _FlatUIDArray_r {
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] FlatUID_r** lpguid;
} FlatUIDArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R166</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In FlatUIDArray_r Structure] cValues: The number of FlatUID_r structures represented in the FlatUIDArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R167</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In FlatUIDArray_r Structure] [cValues] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R168</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In FlatUIDArray_r Structure] lpguid: The FlatUID_r data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R169</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] The WStringArray_r structure encodes an array of references to Unicode strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1570</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] [The type is defined as following:] 
typedef struct _WStringArray_r {
  [range(0,100000)] DWORD cValues;
  [string, size_is(cValues)] wchar_t** lppszW;
} WStringArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R170</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] cValues: The number of Unicode character string references represented in the WStringArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R171</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] [cValues]This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R172</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] lppszW: The Unicode character string references.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R173</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In WStringArray_r Structure] [ppszW] The strings referred to are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R174</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In DateTimeArray_r Structure] The DateTimeArray_r structure encodes an array of FILETIME structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1571</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In DateTimeArray_r Structure] [The type is defined as following:] 
typedef struct _DateTimeArray_r {
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] FILETIME* lpft;
} DateTimeArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R175</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In DateTimeArray_r Structure] cValues: The number of FILETIME data structures represented in the DateTimeArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R176</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In DateTimeArray_r Structure] [cValues] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R177</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In DateTimeArray_r Structure] lpft: The FILETIME data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R178</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] The PROP_VAL_UNION structure encodes a single instance of any type of property value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1572.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R179</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] It [PROP_VAL_UNION] is an aggregation data structure, allowing a single parameter to an NSPI method to contain any type of property value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1572.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1572</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [The type is defined as following:] 
typedef 
[switch_type(long)] 
  union _PV_r {
  [case(0x00000002)] 
    short int i;
  [case(0x00000003)] 
    long l;
  [case(0x0000000B)] 
    unsigned short int b;
  [case(0x0000001E)] 
    [string] char* lpszA;
  [case(0x00000102)] 
    Binary_r bin;
  [case(0x0000001F)] 
    [string] wchar_t* lpszW;
  [case(0x00000048)] 
    FlatUID_r* lpguid;
  [case(0x00000040)] 
    FILETIME ft;
  [case(0x0000000A)] 
    long err;
  [case(0x00001002)] 
    ShortArray_r MVi;
  [case(0x00001003)] 
    LongArray_r MVl;
  [case(0x0000101E)] 
    StringArray_r MVszA;
  [case(0x00001102)] 
    BinaryArray_r MVbin;
  [case(0x00001048)] 
    FlatUIDArray_r MVguid;
  [case(0x0000101F)] 
    WStringArray_r MVszW;
  [case(0x00001040)] 
    DateTimeArray_r MVft;
  [case(0x00000001, 0x0000000D)] 
    long lReserved;
} PROP_VAL_UNION;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R181</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] l: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single 32-bit integer value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R182</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] b: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single Boolean value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R183</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [b] The client and server MUST NOT set this to values other than 1 or 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R184</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] lpszA: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single 8-bit character string value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R185</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [lpszA] This value is NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R186</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] bin: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single binary data value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R187</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [bin] The number of bytes that can be encoded in this structure is 2,097,152.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R188</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] lpszW: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single Unicode string value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R189</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [lpszW] This value is NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R190</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] lpguid: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single GUID value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R191</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [lpguid] The value is encoded as a FlatUID_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R192</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] ft: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single 64-bit integer value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R193</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [ft] The value is encoded as a FILETIME structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R194</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] err: PROP_VAL_UNION contains an encoding of the value of a property that can contain a single PtypErrorCode value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R195</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVi: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple 16-bit integer values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R196</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVi] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R197</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVl: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple 32-bit integer values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R198</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVl] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R199</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVszA: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple 8-bit character string values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R200</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVszA] These string values [values of a property] are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R201</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVszA] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R202</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVbin: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple binary data values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R203</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVbin] The number of bytes that can be encoded in each value of this structure is 2,097,152.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R204</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVbin] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R205</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVguid: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple GUID values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R206</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVguid] The values are encoded as FlatUID_r data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R207</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVguid] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R208</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVszW: PROP_VAL_UNION contains an encoding of the values of a property that can contain multiple Unicode string values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R209</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVszW] These string values [values of a property] are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R210</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVszW] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R211</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] MVft: PROP_VAL_UNION contains an encoding of the value of a property that can contain multiple 64-bit integer values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R212</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVft] The values are encoded as FILETIME structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R213</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [MVft] The number of values that can be encoded in this structure is 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R214</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] lReserved: [means this filed is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R215</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] [IReserved] All clients and servers MUST set this value [lReserved] to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1707.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1707</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.11</ns1:Doc_Sect>
		<ns1:Description>[In PROP_VAL_UNION Structure] The server under test MUST set this value [lReserved] to the constant 0x00000000.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R215:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R216</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] The PropertyValue_r structure is an encoding of the PropertyValue_r data structure, as specified in [MS-OXCDATA] section 2.11.2.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R456, MS-OXCDATA_R457, MS-OXNSPI_R458.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R217</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] For property values with uninterpreted byte values, the permissible number of bytes in the PropertyValue_r structure exceeds that of the PropertyValue data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R218</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] For property values with multiple values, the permissible number of values in the PropertyValue_r structure exceeds that of the PropertyValue data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R219</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] The semantic meaning is otherwise unchanged from the PropertyValue data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1573</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] [The PropertyValue_r is defined as following:] 
typedef struct _PropertyValue_r {
  DWORD ulPropTag;
  DWORD ulReserved;
  [switch_is((long)(ulPropTag &amp; 0x0000FFFF))] 
    PROP_VAL_UNION Value;
} PropertyValue_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R220</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] ulPropTag: Encodes the proptag of the property whose value is represented by the PropertyValue_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R456.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R221</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] ulReserved: [means this filed is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R222</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] [ulReserved] All clients and servers MUST set this value [ulReserved] to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1708.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1708</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] The server under test MUST set this value [ulReserved] to the constant 0x00000000.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R222:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R223</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] Value: Encodes the actual value of the property represented by the PropertyValue_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R458.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R224</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2.12</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] [Value] The type value held is specified by the property type of the proptag in the ulPropTag field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R225</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] The PropertyRow_r structure is an encoding of the StandardPropertyRow data structure, as specified in [MS-OXCDATA] section 2.8.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R226</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] The semantic meaning is unchanged from the StandardPropertyRow data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1574</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] [The type is defined as following:] typedef struct _PropertyRow_r {
  DWORD Reserved;
  [range(0,100000)] DWORD cValues;
  [size_is(cValues)] PropertyValue_r* lpProps;
} PropertyRow_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R227</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] Reserved: Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R228</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] [Reserved] All clients and servers MUST set this value to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1709.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1709</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] [Reserved] The server under test MUST set this value to the constant 0x00000000.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R228:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R229</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] cValues: The number of PropertyValue_r structures represented in the PropertyRow_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R230</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] [cValues] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R231</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] lpProps: Encodes the ValueArray field of the StandardPropertyRow data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R232</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] The PropertyRowSet_r structure is an encoding of the PropertyRowSet_r data structure, as specified in [MS-OXCDATA] section 2.8.2.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXCDATA_R97, MS-OXCDATA_R99.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R233</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] The permissible number of PropertyRows in the PropertyRowSet_r data structure exceeds that of the PropertyRowSet data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R234</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] The semantic meaning is otherwise unchanged from the PropertyRowSet data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1575</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] [The type is defined as following:]
typedef struct _PropertyRowSet_r {
  [range(0,100000)] DWORD cRows;
  [size_is(cRows)] PropertyRow_r aRow[];
} PropertyRowSet_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R235</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] cRows: Encodes the RowCount field of the PropertyRowSet data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R97.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R236</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] [cRows] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R237</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] aRow: Encodes the Rows field of the PropertyRowSet data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXCDATA_R99.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R238</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5</ns1:Doc_Sect>
		<ns1:Description>[In Restrictions] The following structures [AndRestriction_r Restriction, OrRestriction_r Restriction, NotRestriction_r Restriction, ContentRestriction_r Restriction, PropertyRestriction_r Restriction, ExistRestriction_r Restriction, RestrictionUnion_r Restriction and Restriction_r Restriction] are used to represent restrictions of a table, as defined in [MS-OXCDATA] section 2.12.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R239</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] The AndRestriction_r, OrRestriction_r restriction types share a single RPC encoding.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R240</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] The AndOrRestriction_r structure is an encoding of the both the AndRestriction_r data structure and the OrRestriction_r data structure, as specified in [MS-OXCDATA] sections 2.12.1.2 and 2.12.2.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R241</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] These two data structures [AndRestriction_r and OrRestriction_r] share the same data layout, so a single encoding is included in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R242</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] The sense of the data structure's use is derived from the context of its inclusion in the RestrictionUnion_r data structure, as specified in section 2.2.5.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R243</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] The permissible number of restriction structures in the AndRestriction_r and OrRestriction_r data structures exceeds that of the AndRestriction and OrRestriction structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R244</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] The semantic meaning is otherwise unchanged from the AndRestriction and OrRestriction data structures, as context dictates.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1576</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] [The type is defined as following:] 
typedef struct _AndOrRestriction_r {
  [range(0,100000)] DWORD cRes;
  [size_is(cRes)] Restriction_r* lpRes;
} AndRestriction_r, 
 OrRestriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R245</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] cRes: Encodes the RestrictCount field of the AndRestriction and OrRestriction data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R246</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] [cRes] This value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R247</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In AndRestriction_r Restriction] lpRes: Encodes the Restricts field of the AndRestriction and OrRestriction data structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R248</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In NotRestriction_r Restriction] The NotRestriction_r structure is an encoding of the NotRestriction _r data structure, as specified in [MS-OXCDATA] section 2.12.3.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R249</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In NotRestriction_r Restriction] The semantic meaning is unchanged from the NotRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1577</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In NotRestriction_r Restriction] [The type is defined as following:]
typedef struct _NotRestriction_r {
  Restriction_r* lpRes;
} NotRestriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R250</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In NotRestriction_r Restriction] lpRes: Encodes the Restriction field of the NotRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R251</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] The ContentRestriction_r structure is an encoding of the ContentRestriction_r data structure, as specified in [MS-OXCDATA] section 2.12.4.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R252</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] The semantic meaning is unchanged from the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1578</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] [The type is defined as following:] 
typedef struct _ContentRestriction_r {
    DWORD ulFuzzyLevel;
    DWORD ulPropTag;
    PropertyValue_r * lpProp;
  } ContentRestriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R253</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] ulFuzzyLevel: Encodes the FuzzyLevelLow and FuzzyLevelHigh fields of the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R254</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] FuzzyLevelLow: Encodes the FuzzyLevelLow field of the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R255</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] FuzzyLevelHigh: Encodes the FuzzyLevelHigh field of the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R256</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] R1: [means this filed is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R257</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] [R1] All clients MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R258</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] ulPropTag: Encodes the PropertyTag field of the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R259</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.3</ns1:Doc_Sect>
		<ns1:Description>[In ContentRestriction_r Restriction] lpProp: Encodes the TaggedValue field of the ContentRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R260</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] The PropertyRestriction_r structure is an encoding of the PropertyRestriction_r data structure, as specified in [MS-OXCDATA] section 2.12.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R261</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] The semantic meaning is unchanged from the PropertyRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1579</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] [The type is defined as following:] 
typedef struct _PropertyRestriction_r {
  DWORD relop;
  DWORD ulPropTag;
  PropertyValue_r* lpProp;
} PropertyRestriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R262</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] relop: Encodes the RelOp field of the PropertyRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R263</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] ulPropTag: Encodes the PropTag field of the PropertyRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R264</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.4</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRestriction_r Restriction] lpProp: Encodes the TaggedValue field of the PropertyRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R265</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] The ExistRestriction_r structure is an encoding of the ExistRestriction_r data structure, as specified in [MS-OXCDATA] section 2.12.9.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R266</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] The semantic meaning is unchanged from the ExistRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1580</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] [The type is defined as following:] 
typedef struct _ExistRestriction_r {
  DWORD ulReserved1;
  DWORD ulPropTag;
  DWORD ulReserved2;
} ExistRestriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R267</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] ulReserved1: [means this filed is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R268</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] [ulReserved1] All clients MUST set this value to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R269</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] ulPropTag: Encodes the PropTag field of the ExistRestriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R270</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] ulReserved2: [means this filed is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R271</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.5</ns1:Doc_Sect>
		<ns1:Description>[In ExistRestriction_r Restriction] [ulReserved2] All clients MUST set this value to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R272</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] The RestrictionUnion_r structure encodes a single instance of any type of restriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R273</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] It [RestrictionUnion_r] is an aggregation data structure, allowing a single parameter to an NSPI method to contain any type of restriction data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1581</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] [The type is defined as following:]
typedef 
[switch_type(long)] 
  union _RestrictionUnion_r {
  [case(0x00000000)] 
    AndRestriction_r resAnd;
  [case(0x00000001)] 
    OrRestriction_r resOr;
  [case(0x00000002)] 
    NotRestriction_r resNot;
  [case(0x00000003)] 
    ContentRestriction_r resContent;
  [case(0x00000004)] 
    PropertyRestriction_r resProperty;
  [case(0x00000008)] 
    ExistRestriction_r resExist;
} RestrictionUnion_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R274</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resAnd: RestrictionUnion_r contains an encoding of an AndRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R275</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resOr: RestrictionUnion_r contains an encoding of an OrRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R276</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resNot: RestrictionUnion_r contains an encoding of a NotRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R277</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resContent: RestrictionUnion_r contains an encoding of a ContentRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R278</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resProperty: RestrictionUnion_r contains an encoding of a PropertyRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R279</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.6</ns1:Doc_Sect>
		<ns1:Description>[In RestrictionUnion_r Restriction] resExist: RestrictionUnion_r contains an encoding of an ExistRestriction.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R280</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] The Restriction_r structure is an encoding of the Restriction filters, as specified in [MS-OXCDATA] section 2.12.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R281</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] The permissible number of Restriction structures encoded in AndRestriction_r and OrRestriction_r data structures recursively included in the Restriction_r data type exceeds that of the AndRestriction_r and OrRestriction_r data structures recursively included in the Restriction filters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R282</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] The semantic meaning is otherwise unchanged from the Restriction filters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1582</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] [The type is defined as following:] 
typedef struct _Restriction_r {
  DWORD rt;
  [switch_is((long)rt)] RestrictionUnion_r res;
} Restriction_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R283</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] rt: Encodes the RestrictType field common to all restriction structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R284</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.5.7</ns1:Doc_Sect>
		<ns1:Description>[In Restriction_r Restriction] res: Encodes the actual restriction specified by the type in the rt field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R285</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6</ns1:Doc_Sect>
		<ns1:Description>[In Property Name/Property ID Structures] The following structures [PropertyName_r Structure] are used to represent named properties, as specified in [MS-OXCDATA] section 2.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R286</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] The PropertyName_r structure is an encoding of the PropertyName_r data structure, as specified in [MS-OXCDATA] section 2.6.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R287</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] The semantic meaning is unchanged from the PropertyName data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1583</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] [The type is defined as following:] 
typedef struct PropertyName_r {
  FlatUID_r* lpguid;
  DWORD ulReserved;
  long lID;
} PropertyName_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R288</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] lpguid: Encodes the GUID field of the PropertyName data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R289</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] [lpguid] This field is encoded as a FlatUID_r data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R290</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] ulReserved: [means this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R291</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] [ulReserved] All clients MUST set this value to the constant 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R292</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] lID: Encodes the lID field of the PropertyName data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R293</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.6.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyName_r Structure] [lID] In addition to the definition of the LID field, this field [LID] is always present in the PropertyName_r data structure; it [LID] is not optional.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R298</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7</ns1:Doc_Sect>
		<ns1:Description>[In String Arrays] The following structures [StringArray_r and WStringArray_r] are used to aggregate a number of strings into a single data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R299</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] The StringsArray_r structure is used to aggregate a number of character type strings into a single data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1585</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] [The type is defined as following:]  
typedef struct _StringsArray {
  [range(0,100000)] DWORD Count;
  [string, size_is(Count)] char* Strings[];
} StringsArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R300</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] Count: The number of character string structures in this aggregation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R301</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] [Count] The value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R302</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] Strings: The list of character type strings in this aggregation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R303</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.1</ns1:Doc_Sect>
		<ns1:Description>[In StringsArray_r] [Strtings] The strings in this list are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R304</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] The WStringsArray_r structure is used to aggregate a number of wchar_t type strings into a single data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1586</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] [The type is defined as following:]
typedef struct _WStringsArray {
  [range(0,100000)] DWORD Count;
  [string, size_is(Count)] wchar_t* Strings[];
} WStringsArray_r;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R305</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] Count: The number of character strings structures in this aggregation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R306</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] [Count] The value MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R307</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] Strings: The list of wchar_t type strings in this aggregation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R308</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.7.2</ns1:Doc_Sect>
		<ns1:Description>[In WStringsArray_r] [Strings] The strings in this list are NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R309</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] The STAT structure is used to specify the state of a table and location information that applies to that table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R773, MS-OXNSPI_R922, MS-OXNSPI_R1003, MS-OXNSPI_R1081, MS-OXNSPI_R1172.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R310</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] It [the STAT structure] appears as both an input parameter and an output parameter in many NSPI methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R784, MS-OXNSPI_R796, MS-OXNSPI_R797, MS-OXNSPI_R798, MS-OXNSPI_R799, MS-OXNSPI_R1050, MS-OXNSPI_R1051, MS-OXNSPI_R1052, MS-OXNSPI_R1054, MS-OXNSPI_R1055.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1587</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [The type is defined as following:] 
typedef struct {
  DWORD SortType;
  DWORD ContainerID;
  DWORD CurrentRec;
  long Delta;
  DWORD NumPos;
  DWORD TotalRecs;
  DWORD CodePage;
  DWORD TemplateLocale;
  DWORD SortLocale;
} STAT;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R311</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] SortType: This field contains a DWORD [MS-DTYP] value that represents a sort order.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R312</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortType] The client sets this field to specify the sort type of this table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R93, MS-OXNSPI_R95, MS-OXNSPI_R98, MS-OXNSPI_R100.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R313</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortType] Possible values are specified in section 2.2.1.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R314</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortType] The server MUST NOT modify this field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R315</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] ContainerID: This field contains a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R316</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [ContainerID] The client sets this field to specify the Minimal Entry ID of the address book container that this STAT structure represents.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R317</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [ContainerID] The client obtains these Minimal Entry IDs [Minimal Entry ID of the address book container] from the server's address book hierarchy table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R318</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [ContainerID] The server MUST NOT modify this field in any NSPI method except the NspiGetMatches method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R319</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] CurrentRec: This field contains a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R320</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [CurrentRec] The client sets this field to specify a beginning position in the table for the start of an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R321</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [CurrentRec] The server sets this field to report the end position in the table after processing an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R322</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] Delta: This field contains a long value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R323</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [Delta] The client sets this field to specify an offset from the beginning position in the table for the start of an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R324</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [Delta] If the NSPI method returns a success value, the server MUST set this field to 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R325</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] NumPos: This field contains a DWORD value that specifies a position in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R326</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [NumPos] The client sets this field to specify a fractional position for the beginning position in the table for the start of an NSPI method, as specified in section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R326001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [NumPos] If absolute positioning, as specified in section 3.1.4.5.1, is used, the value of this field specified by the client will be ignored by the server. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R327</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [NumPos] The server sets this field to specify the approximate fractional position at the end of an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R328</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [NumPos] This value [the approximate fractional position] is a zero index; the first element in a table has the numeric position 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R329</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [NumPos] Although the protocol places no boundary or requirements on the accuracy of the approximation the server reports, it is recommended that implementations maximize the accuracy of the approximation to improve usability of the server for clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R330</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] TotalRecs: This field contains a DWORD value that specifies the number of rows in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R331</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TotalRecs] The client sets this field to specify a fractional position for the beginning position in the table for the start of an NSPI method, as specified in section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R331001</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TotalRecs] If absolute positioning, as specified in section 3.1.4.5.1, is used, the value of this field specified by the client will be ignored by the server. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R332</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TotalRecs] The server sets this field to specify the total number of rows in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R333</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TotalRecs] Unlike the NumPos field, the server MUST report this number accurately; an approximation is insufficient.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R334</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] CodePage: This field contains a DWORD value that represents a code page.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R335</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [CodePage] The client sets this field to specify the code page the client uses for non-Unicode strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R336</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [CodePage] The server MUST use this value during string handling, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1933, MS-OXNSPI_R1934, MS-OXNSPI_R1935, MS-OXNSPI_R1936, MS-OXNSPI_R1937, MS-OXNSPI_R1938, MS-OXNSPI_R1939.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R337</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [CodePage] The server MUST NOT modify this field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R338</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] TemplateLocale: This field contains a DWORD value that represents a language code identifier (LCID).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R339</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TemplateLocale] The client sets this field to specify the LCID associated with the template the client wants the server to return.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R757, MS-OXNSPI_R758.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R340</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [TemplateLocale] The server MUST NOT modify this field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R341</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] SortLocale: This field contains a DWORD value that represents an LCID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R342</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortLocale] The client sets this field to specify the LCID that it [client] wants the server to use when sorting any strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R343</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortLocale] The server MUST use this value during sorting, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R344</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.8</ns1:Doc_Sect>
		<ns1:Description>[In STAT] [SortLocale] The server MUST NOT modify this field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R345</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In EntryIDs] Each object in the address book is identified by one or more EntryIDs, as specified in section 3.1.4.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R346</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In EntryIDs] The following table lists the three types of EntryIDs [MinimalEntryID, EphemeralEntryID and PermanentEntryID].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1588</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In EntryIDs] MinimalEntryID: A minimal identifier</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1589</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In EntryIDs] EphemeralEntryID: An ephemeral identifier</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1590</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9</ns1:Doc_Sect>
		<ns1:Description>[In EntryIDs] PermanentEntryID: A permanent identifier</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R347</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] A Minimal Entry ID is a single DWORD value that identifies a specific object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R348</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] Minimal Entry IDs with values less than 0x00000010 are used by clients as signals to trigger specific behaviors in specific NSPI methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R349</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] Except in those places where the protocol defines a specific behavior for these Minimal Entry IDs [Minimal Entry IDs with values less than 0x00000010], the server MUST treat these Minimal Entry IDs [Minimal Entry IDs with values less than 0x00000010] as Minimal Entry IDs that do not specify an object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R350</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] Specific values used in this way are defined in sections 2.2.1.8 and 2.2.1.9.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R351</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] Minimal Entry IDs are created and assigned by Exchange NSPI server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R603.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R352</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] The algorithm used by a server to create a Minimal Entry ID is not restricted by this protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R353</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] A Minimal Entry ID is valid only to servers that respond to an NspiBind method, as specified in section 3.1.4.1.1, with the same server GUID as that used by the server that created the Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R354</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] It is not possible for a client to predict a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1591</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.1</ns1:Doc_Sect>
		<ns1:Description>[In MinimalEntryID] This type [MinimalEntryID] is declared as follows:
typedef DWORD MinEntryID;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R355</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] The EphemeralEntryID structure identifies a specific object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R605.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R356</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Additionally, it [EphemeralEntryID structure] encodes the server that issued the Ephemeral Entry ID and enough information for a client to make a decision as to how to display the object to an end user.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R357</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] A server MUST NOT change an object's Ephemeral Entry ID during the lifetime of an NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1994.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1994</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] A server MUST NOT change an object's Ephemeral Entry ID during two calls.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R357:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R361</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] ID Type (1 byte): The type of this ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R362</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [IDType] The value is the constant 0x87.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R363</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [ID Type] The server uses the presence of this value to identify this EntryID as an Ephemeral Entry ID rather than a Permanent Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R364</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] R1 (1 byte): [means this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R365</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [R1] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1713.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1713</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Server MUST set this value [R1] to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R365:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R366</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] R2 (1 byte): [means this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R367</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [R2] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1714.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1714</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Server MUST set this value [R2] to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R367:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R368</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] R3 (1 byte): [means this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R369</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [R3] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1715.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1715</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Server MUST set this value [R3] to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R369:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R370</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] ProviderUID (16 bytes): A FlatUID_r value, as specified in section 2.2.2.1, that contains the GUID of the server that issued this Ephemeral Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R372</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] R4 (4 bytes): [means this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R373</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [R4] All clients and servers MUST set this value to the constant 0x00000001.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1716.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1716</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Server MUST set this value [R4] to the constant 0x00000001.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R373:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R374</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] Display Type (4 bytes): The display type of the object specified by this Ephemeral Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R375</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [Display Type] This value is expressed in little-endian format.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R376</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [Display Type] Valid values for this field are specified in section 2.2.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R377</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [Display Type] The display type is not considered part of the object's identity; it [display type] is set in the EphemeralEntryID structure by the server as a convenience to clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R378</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [Display Type] The server MUST set this field when this data structure is returned in an output parameter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R379</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [Display Type] A server MUST ignore values of this field on input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1665.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1665</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] If this field [Display Type] is set to different values, the server will return the same value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R379:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R380</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] MId (4 bytes): The Minimal Entry ID of this object, as specified in section 2.2.9.1</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R381</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.2</ns1:Doc_Sect>
		<ns1:Description>[In EphemeralEntryID] [MId] This value is expressed in little-endian format.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R382</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] The PermanentEntryID structure identifies a specific object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R609.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R383</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Additionally, it [PermanentEntryID structure] encodes the constant Exchange Server NSPI Protocol interface (via the ProviderUID field) and enough information for a client to make a decision as to how to display the object to an end user.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R384</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Permanent Entry IDs are transmitted in the protocol as values with the PtypBinary property type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R385</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] A server MAY allow an object's distinguished name (DN) to change.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R386</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] If this [A server allows an object's distinguished name (DN) to change] happens, the server is expected to map a Permanent Entry ID that contains the original DN to the object with the new DN.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R387</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] When returning a PermanentEntryID structure to satisfy a query from a client, a server MUST use the most current version of an object's DN.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R392</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] ID Type (1 byte): The type of this ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R393</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [ID Type] The value is the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R394</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [ID Type] The server uses the presence of this value to identify this EntryID as a Permanent Entry ID rather than an Ephemeral Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R395</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] R1 (1 byte): [means that this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R396</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [R1] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1717.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1717</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Server MUST set this value [R1] to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R396:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R397</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] R2 (1 byte): [means that this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R398</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [R2] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1718.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1718</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [R2] All servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R398:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R399</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] R3 (1 byte): [means that this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R400</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [R3] All clients and servers MUST set this value to the constant 0x00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1719.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1719</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Server MUST set this value [R3] to the constant 0x00.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R400:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R401</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] ProviderUID (16 bytes): A FlatUID_r value that contains the constant GUID specified in Permanent Entry ID GUID, as specified in section 2.2.1.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R403</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] R4 (4 bytes): [means that this field is] Reserved.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R404</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [R4] All clients and servers MUST set this value to the constant 0x00000001.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1720.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1720</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Server MUST set this value [R4] to the constant 0x00000001.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R404:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R405</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Display Type String (4 bytes): The display type of the object specified by this Permanent Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R406</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Display Type String] This value is expressed in little-endian format.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R407</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Display Type String] Valid values for this field are specified in section 2.2.1.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R408</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Display Type String] The display type is not considered part of the object's identity; it is set in the PermanentEntryID field by the server as a convenience to clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R409</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Display Type String] A server MUST set this field when this data structure is returned in an output parameter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R410</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Display Type String] A server MUST ignore values of this field on input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1666.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1666</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] If this field [Display Type String] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R410:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R411</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] Distinguished Name (variable): The DN of the object specified by this Permanent Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R412</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.9.3</ns1:Doc_Sect>
		<ns1:Description>[In PermanentEntryID] [Distinguished Name] The value is expressed as a DN, as specified in [MS-OXOABK] section 2.2.1.1.&lt;2&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXNSPI_R2003004.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R413</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In NSPI_HANDLE] The NSPI_HANDLE handle is an RPC context handle that is used to share a session between method calls.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R414</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In NSPI_HANDLE] The RPC context handle is specified in [C706] section 2.3.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1592</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.10</ns1:Doc_Sect>
		<ns1:Description>[In NSPI_HANDLE] This type [NSPI_HANDLE] is declared as follows:
typedef [context_handle] void* NSPI_HANDLE;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R415</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] The client side of this protocol is simply a pass-through.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R416</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] That is, no additional timers or other state is required on the client side of this protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R417</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] Calls made by the higher-layer protocol or application are passed directly to the transport, and the results returned by the transport are passed directly back to the higher-layer protocol or application.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R418</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] The client MUST call the NSPI NspiBind method, as specified in section 3.1.4.1.1, in order to obtain an RPC context handle to be used in all other NSPI methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R419</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] The NSPI NspiUnbind method, as specified in section 3.1.4.1.2, destroys this context handle.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R701.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R420</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] Therefore, it is not possible to call any methods other than NspiBind immediately after a call to NspiUnbind.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R421</ns1:REQ_ID>
		<ns1:Doc_Sect>3</ns1:Doc_Sect>
		<ns1:Description>[In Protocol Details] The final method a client MUST call is NspiUnbind.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R422</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Details] This protocol enables address book access to a directory data store.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R423</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Details]This [This protocol enables address book access to a directory data store] includes address book hierarchy table discovery, address creation template table discovery, address book container access and browsing, and read and modification of individual address book entries.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R424</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Details] In addition to the abstract data model specified here, this specification uses the address book data model, as specified in [MS-OXOABK], for the server of this protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R425</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1</ns1:Doc_Sect>
		<ns1:Description>[In Server Details] This specification uses the definitions of object properties specified in [MS-OXPROPS].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R625</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Timers] This protocol does not introduce any timers.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R626</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.2</ns1:Doc_Sect>
		<ns1:Description>[In Timers] For details about any transport-level timers, see [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R627</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] Each server MUST have at least one unique GUID, used to identify an NSPI session, as specified in section 3.1.4.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R628</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] The server MUST acquire this GUID [the GUID used to identify an NSPI session] before it [server] is prepared to respond to Exchange Server NSPI Protocol methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R629</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] The protocol does not constrain how a server acquires this GUID [the GUID used to identify an NSPI session].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R630</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] The server MUST maintain this GUID [the GUID used to identify an NSPI session] for the duration of an NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1993.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1993</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] The server maintains the GUID used to identify an NSPI session during one call.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R630:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R631</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] Although the protocol places no further boundary or requirements on the time period for which the server maintains this GUID [the GUID used to identify an NSPI session], it is recommended that implementations maximize this time period to improve the usability of the server for clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R632</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] Each server maintains a set of Address Book objects and containers, as specified in [MS-OXOABK].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R633</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] The Exchange Server NSPI Protocol does not constrain how a server obtains its initial data set, nor does it [the Exchange Server NSPI Protocol] constrain the contents of this initial data set [a set of Address Book objects and containers maintained by server].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R634</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] How a server obtains this data [initial data set] is an implementation-specific detail.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R635</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.3</ns1:Doc_Sect>
		<ns1:Description>[In Initialization] When a server is prepared to respond to Exchange Server NSPI Protocol methods, it [server] creates an RPC listening endpoint, as specified in section 2.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R4.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R636</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime that it is to perform a strict Network Data Representation (NDR) data consistency check at target level 6.0, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R638</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime via the strict_context_handle property that it is to reject use of context handles created by a method of a different RPC interface than this one, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R639</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime via the type_strict_context_handle property that it is to reject use of context handles created by a method that creates a different type of context handle, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R640</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This interface [MS-OXNSPI] includes the methods listed in the following table [NspiBind, NspiUnbind, NspiUpdateStat, NspiQueryRows, NspiSeekEntries, NspiGetMatches, NspiResortRestriction, NspiDNToMId, NspiGetPropList, NspiGetProps, NspiCompareMIds, NspiModProps, NspiGetTemplateInfo, NspiModLinkAtt, NspiQueryColumns, NspiResolveNames and NspiResolveNamesW].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R641</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiBind: Initiates a session with the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R668.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R642</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiUnbind:  Concludes a session with the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R701.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R643</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiUpdateStat: Updates the logical position in a specified table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R768.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R644</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiQueryRows: Returns information about a set of rows in a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R916.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R645</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiSeekEntries: Seeks forward in a specified table and update the logical position in that table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R998.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R646</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiGetMatches: Restricts a specific table based on input parameters and return the resultant Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1077.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R647</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiResortRestriction: Changes the sort order of an Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1168.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R648</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiDNToMId: Translates a DN (1) to a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1243.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R649</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiGetPropList: Returns a list of all the properties which exist on a specific object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R828.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R650</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiGetProps: Returns a list of properties and their values for a specific object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R859.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R651</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiCompareMIds: Compares the position of two rows in a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1210.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R652</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiModProps: Modifies a property of a row in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1267.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R653</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiGetSpecialTable: Retrieves the address book hierarchy table of the server, or retrieves the address creation table from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R743, MS-OXNSPI_R752.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R654</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiGetTemplateInfo: Retrieves addressing or display templates from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1444.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R655</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiModLinkAtt: Modifies a property of a row in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1306.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R656</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] [NspiModLinkAtt] Applies only to rows that support the PtypEmbeddedTable property type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1893.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1862</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiQueryColumns: Returns the information about a list of all the properties that the server is aware of.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R801.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R657</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiResolveNames: Performs ANR on a set of provided names.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1341.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R658</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] [NspiResolveNames] The names are specified in the code page of the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R659</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Operation NspiResolveNamesW: Performs ANR on a set of provided names.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1393.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R660</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] [NspiResolveNamesW] The names are specified in the Unicode character set.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R661</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R662</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] The server MUST return the value NotEnoughMemory if unable to complete processing a method due to errors allocating memory.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R663</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] The server MUST return the value OutOfResources if unable to complete processing a method due to lack of some non-memory resource.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R664</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] The server MUST return the value GeneralFailure if unable to complete processing a method for reasons other than those specified here or in the methods details.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R665</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] The server MUST return the value Success if it [server] completes without some other return value being specified in the method details.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R700, MS-OXNSPI_R712, MS-OXNSPI_R767, MS-OXNSPI_R800, MS-OXNSPI_R827, MS-OXNSPI_R858, MS-OXNSPI_R915, MS-OXNSPI_R997, MS-OXNSPI_R1076, MS-OXNSPI_R1167, MS-OXNSPI_R1209, MS-OXNSPI_R1242, MS-OXNSPI_R1266, MS-OXNSPI_R1305, MS-OXNSPI_R1340, MS-OXNSPI_R1392, MS-OXNSPI_R1443, MS-OXNSPI_R1492.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R666</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] Note  Gaps in the opnum numbering sequence represent opnums that are reserved for local use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R667</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] The server behavior is undefined, because it does not affect interoperability.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R668</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] The NspiBind method initiates a session between a client and the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1669</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] The interface definition is: 
long NspiBind(
 [in] handle_t hRpc,
  [in] DWORD dwFlags,
  [in] STAT* pStat,
  [in, out, unique] FlatUID_r* pServerGuid,
  [out, ref] NSPI_HANDLE* contextHandle
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R669</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] hRpc: An RPC binding handle parameter, as specified in [C706] section 2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R670</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R671</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [dwFlags] The server MUST ignore values other than the bit flag fAnonymousLogin.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1668.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1668</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [dwFlags] If the bits are set to different values [other than the bit flag fAnonymousLogin], the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R671:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R672</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] pStat: A pointer to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R673</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [pStat] This parameter is used to specify input parameters from the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R674</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] pServerGuid: The value NULL or a pointer to a GUID value that is associated with the specific server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R675</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] contextHandle: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R676</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] Return Values: The server returns a LONG [MS-DTYP] value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R677</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R680</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R681</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R682</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1670</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraints 2] The server MAY make additional validations including but not limited to limiting the number of concurrent connections to any specific client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1671</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 2] [The server MAY make additional validations including but not limited] checking the data access rights of the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R687</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 2] If these checks [including but not limited to limiting the number of concurrent connections to any specific client or checking the data access rights of the client] fail, the server MUST return "LogonFailed".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R689</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 3] A value of "fAnonymousLogin" in the input parameter dwFlags indicates that the server did not validate that the client is an authenticated user.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R690</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 3] The server MAY ignore this request [a value of "fAnonymousLogin" in the input parameter dwFlags].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXNSPI_R1613.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R692</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 4] Subject to constraint 3, the server MAY authenticate the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R693</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 4] How a server authenticates a client is an implementation-specific detail.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R695</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 5] The CodePage field of the input parameter pStat specifies the code page to use in this session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R696.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R696</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 5] If the server will not service connections using that code page, the server MUST return the error code "InvalidCodepage".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R697</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 6] Subject to the prior constraints, if the input parameter pServerGuid is not NULL, the server MUST set the output parameter pServerGuid to a GUID associated with the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R698</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 6] The server MAY use a different GUID for each RPC connection.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R699</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 6] Each server MUST use a different GUID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R700</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.1</ns1:Doc_Sect>
		<ns1:Description>[In NspiBind] [Server Processing Rules: Upon receiving message NspiBind, the server MUST process the data from the message subject to the following constraints:] [constraint 7] If no other return code has been set, the server MUST return the value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R701</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] The NspiUnbind method destroys the context handle.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R702</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] No other action is taken.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1672</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] The interface definition is:
 DWORD NspiUnbind(
 [in, out] NSPI_HANDLE* contextHandle,
 [in] DWORD Reserved
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R703</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] contextHandle: An RPC context handle as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R716.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R704</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R705</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] [Reserved] MUST be ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1673.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1673</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R705:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R706</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] Return Values: The server returns a DWORD value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R707</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R712</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] [Server Processing Rules: Upon receiving message NspiUnbind, the server MUST process the data from the message subject to the following constraints:] [constraint 1] If the server successfully destroys the context handle, the server MUST return the value "UnbindSuccess", as specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R714</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] [Server Processing Rules: Upon receiving message NspiUnbind, the server MUST process the data from the message subject to the following constraints:] [constraint 2] If the server does not successfully destroy the context handle, the server MUST return the value "UnbindFailure", as specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R716</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiUnbind] [Server Processing Rules: Upon receiving message NspiUnbind, the server MUST process the data from the message subject to the following constraints:] [constraint 3] The server MUST set the output parameter contextHandle to NULL.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R717</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] The NspiGetSpecialTable method returns the rows of a special table to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R743, MS-OXNSPI_R752.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R718</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] The special table can be an address book hierarchy table or an address creation table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R743, MS-OXNSPI_R752.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1674</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] The interface definition is: 
long NspiGetSpecialTable ( 
 [in] NSPI_HANDLE hRpc,
 [in] DWORD dwFlags,
  [in] STAT* pStat,
  [in, out] DWORD* lpVersion,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R719</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R720</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R721</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [dwFlags] The server MUST ignore values other than the bit flags NspiAddressCreationTemplates and NspiUnicodeStrings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1740.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1740</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] If the bit flags [dwFlags] are set to different values other than NspiAddressCreationTemplates and NspiUnicodeStrings, the server will return the same value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R721:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R722</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] pStat: A pointer to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R723</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [pStat] This parameter is used to specify input parameters from the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R724</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] lpVersion: A reference to a DWORD.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R725</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [lpVersion] On input, holds the value of the version number of the address book hierarchy table that the client has.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R726</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] ppRows: A PropertyRowSet_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R727</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [ppRow] On return, holds the rows for the table that the client is requesting.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R736, MS-OXNSPI_R765.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R728</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] Return Values: The server returns a LONG [MS-DTYP] value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R729</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R732</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the input parameter dwFlags does not contain the value "NspiUnicodeStrings", and the input parameter dwFlags does not contain the value "NspiAddressCreationTemplates", and the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R733</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R734</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or whether the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R736</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server returns any return value other than "Success", the server MUST return a NULL for the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R738</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R739</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server chooses to limit the visibility of data based on these validations [additional validation], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R741</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the input parameter dwFlags contains both the value "NspiAddressCreationTemplates" and the value "NspiUnicodeStrings", the server MUST ignore the value "NspiUnicodeStrings" and proceed as if the parameter dwFlags contained only the value "NspiAddressCreationTemplates".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R743</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the input parameter dwFlags does not contain the value "NspiAddressCreationTemplates", the client is requesting the rows of the server's address book hierarchy table, as specified in section 3.1.4.4.3.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R745</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the client is requesting the rows of the server's address book hierarchy table and the server is not maintaining an address book hierarchy table, the server MUST return the error code "OutOfResources".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R747</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the client is requesting the rows of the server's address book hierarchy table, the input parameter lpVersion contains a version number.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R748</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the version number of the address book hierarchy table the server is holding matches this version number [the version number specified by lpVersion], the server MUST proceed as if the address book hierarchy table had no rows. &lt;3&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement:MS-OXNSPI_R748001.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R750</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the client is requesting the rows of the server's address book hierarchy table and the server returns the value "Success", the server MUST set the output parameter lpVersion to the version of the server's address book hierarchy table. &lt;4&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement:MS-OXNSPI_R750001.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R752</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If the input parameter dwFlags contains the value "NspiAddressCreationTemplates", the client is requesting the rows of an address creation table, as specified in section 3.1.4.4.3.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R754</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] There is no constraint on the parameter lpVersion if the client is requesting the rows of an address creation table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R756</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If the client is requesting the rows of an address creation table, the TemplateLocale field of the input parameter pStat specifies the LCID for which the client requires an address creation table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R757</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If the server does not maintain an address creation table for that LCID [the LCID specified by TemplateLocale field of the input parameter pStat], the server MUST proceed as if it [server] maintained an address creation table with no rows for that LCID [the LCID specified by TemplateLocale field of the input parameter pStat].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R758</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] That is, the server MUST NOT return an error code if it [server] does not maintain an address creation table for that LCID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R760</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If the input parameter dwFlags contains the value "NspiUnicodeStrings" and the client is requesting the rows of the server's address book hierarchy table, the server MUST express string-valued properties in the table as Unicode values, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R762</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] If the input parameter dwFlags does not contain the value "NspiUnicodeStrings" and the client is requesting the rows of the server's hierarchy table, and the CodePage field of the input parameter pStat does not contain the value CP_WINUNICODE, the server MUST express string-valued properties as 8-bit strings in the code page specified by the field CodePage in the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R763</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] For more details, see section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1863</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] The server MUST return the following properties for each container in the hierarchy, in the order listed: PidTagEntryId ([MS-OXPROPS] section 2.677)
PidTagContainerFlags ([MS-OXPROPS] section 2.638)
PidTagDepth ([MS-OXPROPS] section 2.670)
PidTagAddressBookContainerId ([MS-OXPROPS] section 2.506)
PidTagDisplayName ([MS-OXPROPS] section 2.667)
PidTagAddressBookIsMaster ([MS-OXPROPS] section 2.539)
PidTagAddressBookParentEntryId ([MS-OXPROPS] section 2.553) (optional, and MUST be the seventh column if it [property PidTagAddressBookParentEntryId] is included)</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1864</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 15] For every row returned, all of these properties [PidTagEntryId, PidTagContainerFlags, PidTagDepth, PidTagAddressBookContainerId, PidTagDisplayName, PidTagAddressBookIsMaster and PidTagAddressBookParentEntryId] except PidTagAddressBookParentEntryId MUST be present, and each of them MUST have a value prescribed under its definition.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1865</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 16] The PidTagEntryId property MUST be in the form of a PermanentEntryID structure, as section 2.2.9.3, with its PidTagDisplayType property having the value DT_CONTAINER, as specified in section 2.2.1.3, and its DN following the addresslist-dn format specification, as specified in [MS-OXOABK] section 2.2.1.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1866</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 16] When the object is the Global Address List (GAL) container, its DN MUST follow the gal-addrlist-dn format specification.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R765</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 17] Subject to the prior constraints, the server returns the rows of the table requested by the client in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R767</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.3</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetSpecialTable] [Server Processing Rules: Upon receiving message NspiGetSpecialTable, the server MUST process the data from the message subject to the following constraints:] [Constraint 18] If no error condition has been specified by the previous constraints, the server MUST return the value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R768</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] The NspiUpdateStat method updates the STAT block that represents position in a table to reflect positioning changes requested by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1675</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] The interface definition is:
 long NspiUpdateStat(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in, out] STAT* pStat,
  [in, out, unique] long* plDelta
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R769</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R770</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] Reserved: A DWORD [MS-DTYP] value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R771</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Reserved] Reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R772</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1676.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1676</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R772:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R773</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] pStat: A pointer to a STAT block describing a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R774</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [pStat] This parameter is used to specify both input parameters from the client and return values from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R775</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] plDelta: The value NULL or a pointer to a LONG [MS-DTYP] value that, on return, indicates movement within the address book container specified by the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R795, MS-OXNSPI_R1868.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1871</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [plDelta] The server MUST ignore the value specified by this parameter in the request if it [the value specified by plDelta] is not NULL.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1872.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1872</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] If this field [plDelta] is set to different values rather than NULL, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1871:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R776</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] Return Values: The server returns a long value specifying the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R777</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R780</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R781</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R782</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or whether the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R784</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server returns any return value other than "Success", the server MUST NOT modify the output parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R786</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R787</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R789</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value InvalidBookmark.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R791</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 5: The server locates the initial position row in the table specified by the ContainerID field of the input parameter pStat as follows:] If the row specified by the CurrentRec field of the input parameter pStat is not MID_CURRENT, the server locates that row as the initial position row using the absolute position, as specified in section 3.1.4.5.1. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R792</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 5: The server locates the initial position row in the table specified by the ContainerID field of the input parameter pStat as follows:] If the row [the row specified by the CurrentRec field of the input parameter pStat] cannot be found, the server MUST return the error "NotFound".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R793</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 5: The server locates the initial position row in the table specified by the ContainerID field of the input parameter pStat as follows:] If the row specified by the CurrentRec field of the input parameter pStat is MID_CURRENT, the server locates the initial position row using the fractional position specified in the NumPos field of the input parameter pStat as specified in section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R794</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] After locating the initial position row in the current table, the server locates the final position row by moving forward or backward in the table from the current position row as specified in the Delta field of the input parameter pStat, with the constraints specified in section 3.1.4.5 with respect to movement beyond the beginning or end of a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R548, MS-OXNSPI_R549, MS-OXNSPI_R550, MS-OXNSPI_R587, MS-OXNSPI_R588, MS-OXNSPI_R589.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R795</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input parameter plDelta is not null, the server MUST set it [plDelta] to the actual number of rows between the initial position row and the final position row.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1868</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input parameter plDelta is null, the server MUST set the output parameter plDelta to null.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R796</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] The server MUST set the CurrentRec field of the parameter pStat to the Minimal Entry ID of the current row in the current address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R797</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The server MUST set the NumPos field of the parameter pStat to the approximate numeric position of the current row of the current address book container according to section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R798</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] The server MUST set the TotalRecs field of the parameter pStat to the number of rows in the current address book container according to section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R799</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] The server MUST leave all other fields [other than CurrentRec, NumPos, TotalRecs and Delta] of the parameter pStat unchanged.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R800</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.4</ns1:Doc_Sect>
		<ns1:Description>[In NspiUpdateStat] [Server Processing Rules: Upon receiving message NspiUpdateStat, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If no error condition has been specified by the previous constraints, the server MUST return "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R801</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] The NspiQueryColumns method returns a list of all the properties that the server is aware of.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R802</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] It [NspiQueryColumns] returns this list [a list of all the properties that the server is aware of] as an array of proptags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1677</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] The interface definition is: 
long NspiQueryColumns(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] DWORD dwFlags,
  [out] PropertyTagArray_r** ppColumns
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R803</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R804</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R805</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1922.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1922</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R805:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R806</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] dwFlags: A DWORD value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R807</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [dwFlags] The server MUST ignore values other than the bit flag NspiUnicodeProptypes.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1923.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1923</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] If dwFlags is set to different values other than the bit flag NspiUnicodeProptypes, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R807:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R808</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] ppColumns: A reference to a PropertyTagArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R809</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [ppColumns] On return, contains a list of proptags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R810</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] Return Values: The server returns a LONG [MS-DTYP] value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R811</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R814</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the server returns any return value other than "Success", the server MUST return a NULL for the output parameter ppColumns.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1619</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R818</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R820</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the input parameter dwFlags contains the bit flag NspiUnicodeProptypes, then the server MUST report the property type of all string valued properties as PtypString.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R822</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the input parameter dwFlags does not contain the bit flag NspiUnicodeProptypes, the server MUST report the property type of all string valued properties as PtypString8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R824</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] Subject to the prior constraints, the server MUST construct a list of all the properties it [server] is aware of and return that list as a PropertyTagArray_r structure, as specified in section 2.2.2.2, in the output parameter ppColumns.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R825</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The protocol does not constrain the order of this list [a list of all the properties server is aware of].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R827</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.5</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryColumns] [Server Processing Rules: Upon receiving message NspiQueryColumns, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If no error condition has been specified by the previous constraints, the server MUST return the value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R828</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] The NspiGetPropList method returns a list of all the properties that have values on a specified object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1678</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] The interface definition is:
 long NspiGetPropList(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD dwFlags,
  [in] DWORD dwMId,
  [in] DWORD CodePage,
  [out] PropertyTagArray_r** ppPropTags
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R829</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R830</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R831</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [dwFlags] The server MUST ignore values other than the bit flag fSkipObjects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1924.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1924</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] If dwFlags is set to different values other than the bit flag fSkipObjects, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R831:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R832</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] dwMId: A DWORD value that contains a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R833</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] CodePage: The code page in which the client wants the server to express string values properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R834</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] ppPropTags: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R835</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [ppPropTags] On return, it holds a list of properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R834.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R836</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R837</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R840</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the server returns any return value other than "Success", the server MUST return a NULL for the output parameter ppPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R842</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R843</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R848</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the input parameter dwFlags contains the bit flag fSkipObjects, the server MUST NOT return any proptags with the PtypEmbeddedTable property type in the output parameter ppPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R852</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MUST return all string valued properties as having the PtypString8 property type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R854</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] Subject to the previous constraints, the server constructs a list of all proptags that correspond to values on the object specified in the input parameter dwMId.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R855</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The server MUST return this list [a list of all proptags that correspond to values on the object specified in the input parameter dwMId] in the output parameter ppPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R856</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The protocol does not constrain the order of this list [a list of all proptags that correspond to values on the object specified in the input parameter dwMId].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R858</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.6</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetPropList] [Server Processing Rules: Upon receiving message NspiGetPropList, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If no error condition has been specified by the previous constraints, the server MUST return the value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R859</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] The NspiGetProps method returns an address book row that contains a set of the properties and values that exist on an object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1679</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] The interface definition is: 
long NspiGetProps(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD dwFlags,
  [in] STAT* pStat,
  [in, unique] PropertyTagArray_r* pPropTags,
  [out] PropertyRow_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R860</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R861</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R862</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [dwFlags] The server MUST ignore values other than the bit flags fEphID and fSkipObjects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1925.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1925</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] If dwFlags is set to different values other than the bit flags fEphID and fSkipObjects, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R862:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R863</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] pStat: A pointer to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R864</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [pStat] This parameter is used to specify input parameters from the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R865</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] pPropTags: The value NULL or a reference to a PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R866</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [pPropTags] Contains list of the proptags of the properties that the client wants to be returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R886, MS-OXNSPI_R1693.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R867</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] ppRows: A reference to a PropertyRow_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R868</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [ppRows] Contains the address book container row the server returns in response to the request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R869</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] Return Values: The server returns a long value specifying the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R870</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R873</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat is set to the value CP_WINUNICODE and the type of the proptags in the input parameter pPropTags is PtypString8, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R874</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R875</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R877</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server returns any return values other than"ErrorsReturned" (0x00040380) or "Success" (0x00000000), the server MUST return a NULL for the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R879</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R880</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R882</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the value "InvalidBookmark" (0x80040405).&lt;5&gt;.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXNSPI_R2003005.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1623</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The server constructs a list of proptags for which it [server] will return property values as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R885</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Constraint 5] If the input parameter pPropTags is not NULL, the client is requesting the server return only those properties and their values in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R886.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R886</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Constraint 5] [If the input parameter pPropTags is not NULL] The server MUST use this list [input parameter pPropTags].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R888</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Constraint 5] If the input parameter pPropTags is NULL, the client is requesting that the server constructs a list of proptags on its behalf.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1693.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1693</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [constraint 5] The server MUST construct a proptag list that is exactly the same list that would be returned to the client in the pPropTags output parameter of the NspiGetPropList method, as specified in section 3.1.4.1.6, using the following parameters as inputs to the NspiGetPropList method: 
The NspiGetProps parameter hRpc is used as the NspiGetPropList parameter hRpc. 
The NspiGetProps parameter dwFlags is used as the NspiGetPropList parameter dwFlags. 
The CurrentRec field of the NspiGetProps parameter pStat is used as the NspiGetPropList parameter dwMId.
The CodePage field of the NspiGetProps parameter pStat is used as the NspiGetPropList parameter CodePage.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R894</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Constraints 5] If a call to the NspiGetPropList method with these parameters [hRpc, dwFlags, CurrentRec field of the NspiGetProps parameter pStat and CodePage field of the NspiGetProps parameter pStat] and relaxed constraints would return anything other than "Success", the server MUST return that error code as the return value for the NspiGetProps method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R896</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the length of the list of proptags for which the server will return property values is excessive, the server MUST return the return value "TableTooBig", as specified in [MS-OXCDATA] section 2.4</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R897</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The Exchange Server NSPI Protocol does not prescribe what constitutes an excessive length.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R899</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If input parameter dwFlags contains the bit flag fEphID and the PidTagEntryId property is present in the list of proptags, the server MUST return the values of the PidTagEntryId property in the Ephemeral Entry ID format, as specified in section 2.2.9.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R901</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If input parameter dwFlags does not contain the bit flag fEphID and the PidTagEntryId property is present in the list of proptags, the server MUST return the values of the PidTagEntryId property in the Permanent Entry ID format, as specified in section 2.2.9.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R903</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The server MUST return string-valued properties in the code page specified in CodePage field of the input parameter pStat, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R905</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] If the server can locate the object specified in the CurrentRec field of the input parameter pStat, the server MUST return values associated with this object [the object specified in the CurrentRec field of the input parameter pStat].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R907</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If the server is unable to locate the object specified in the CurrentRec field of the input parameter pStat, the server MUST proceed as if the object was located but had no values for any properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R909</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If a property in the proptag list has no value on the object specified by the CurrentRec field, the server MUST return the error code ErrorsReturned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R910</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] [If a property in the proptag list has no value on the object specified by the CurrentRec field] The server MUST set the aulPropTag member corresponding to the proptag with no value with the proptag that has no value with the PtypErrorCode property type.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R911</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] Subject to the prior constraints, the server constructs a list of properties and their values as a single PropertyRow_r structure with a one-to-one order preserving correspondence between the values in the proptag list specified by input parameters and the returned properties and values in the RowSet.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R912</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If there are duplicate properties in the proptag list, the server MUST create duplicate values in the parameter RowSet.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R913</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] The server MUST return this RowSet in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R915</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.7</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetProps] [Server Processing Rules: Upon receiving message NspiGetProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] If no other return values have been specified by these constraints [constraints 1-12], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R916</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] The NspiQueryRows method returns to the client a number of rows from a specified table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R918</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] Although the protocol places no boundary or requirements on the minimum number of rows the server returns, implementations SHOULD return as many rows as possible to improve usability of the server for clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1680</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] The interface definition is:
long NspiQueryRows(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD dwFlags,
  [in, out] STAT* pStat,
  [in, range(0,100000)] DWORD dwETableCount,
  [in, unique, size_is(dwETableCount)] 
    DWORD* lpETable,
  [in] DWORD Count,
  [in, unique] PropertyTagArray_r* pPropTags,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R919</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R920</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R921</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [dwFlags] The server MUST ignore values other than the bit flags fEphID and fSkipObjects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1926.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1926</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] If dwflags is set to different values other than the bit flags fEphID and fSkipObjects, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R921:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R922</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] pStat: A pointer to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R923</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [pStat] This parameter is used to specify both input parameters from the client and return values from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R924</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] dwETableCount: A DWORD value that contains the number values in the input parameter lpETable.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R925</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [dwETableCount] This value is limited to 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R926</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] lpETable: An array of DWORD values, representing an Explicit Table, as specified in section 3.1.4.4.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R927</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] Count: A DWORD value that contains the number of rows the client is requesting.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R928</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] pPropTags: The value NULL or a reference to a PropertyTagArray_r value, containing a list of the proptags of the properties that client requires to be returned for each row returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R951, MS-OXNSPI_R1627.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R929</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] ppRows: A reference to a PropertyRowSet_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R930</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [ppRows] Contains the address book container rows that the server returns in response to the request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R943, MS-OXNSPI_R1762, MS-OXNSPI_R955, MS-OXNSPI_R957.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R931</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] Return Values: The server returns a long value specifying the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R932</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R935</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R936</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R937</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or whether the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R939</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the input parameter lpETable is NULL and the input parameter Count is 0, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R940</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R941</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R943</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server returns any return values other than "Success", the server MUST return a NULL for the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1762</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] If the server returns any return values other than "Success", the server MUST NOT modify the output parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R945</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R946</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R948</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the input parameter lpETable is NULL and the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1626</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server constructs a list of proptags for which it [server] will return property values as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R950</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the input parameter pPropTags is not NULL, the client is requesting the server return only those properties and their values in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R951.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R951</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] [If the input parameter pPropTags is not NULL] The server MUST use this list [the list specified by pPropTags].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R952</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the input parameter pPropTags is NULL, the client is requesting that the server construct a list of proptags on its behalf.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1627.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1627</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] [If the input parameter pPropTags is NULL] This server MUST use the following proptag list (using proptags defined in [MS-OXPROPS]), in this order: {PidTagAddressBookContainerId ([MS-OXOABK] section 2.2.2.3), PidTagObjectType ([MS-OXOABK] section 2.2.3.10), PidTagDisplayType ([MS-OXOABK] section 2.2.3.11), PidTagDisplayName ([MS-OXOABK] section 2.2.3.1) with the property type PtypString8, as specified in [MS-OXCDATA] section 2.11.1, PidTagPrimaryTelephoneNumber ([MS-OXOCNTC] section 2.2.1.4.5) with the property type PtypString8, PidTagDepartmentName ([MS-OXOABK] section 2.2.4.6) with the property type PtypString8, PidTagOfficeLocation ([MS-OXOABK] section 2.2.4.5) with the property type PtypString8}</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R955</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input parameter lpETable is NULL, the server MUST use the table specified by the input parameter pStat when constructing the return parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R957</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the input parameter lpETable is not NULL, it [lpET] contains an Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R958</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] [If the input parameter lpETable is not NULL] The server MUST use that table when constructing the return parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R960</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The client MUST NOT specify the value 0 for the input parameter Count if the input parameter lpETable is not NULL.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R962</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] If there are any rows that satisfy the client's query, the server MUST return at least one row.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R967</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] The server MUST return rows in the order they exist in the table being used.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R969</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If the server is using the table specified by the input parameter pStat, the server MUST process rows starting from the current position in the table specified in that parameter (including any values of the Delta field).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R971</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] If the server is using the table specified by the input parameter lpETable, the server MUST process rows starting from the beginning of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R973</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] The server constructs a RowSet.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R974</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] Each row in the RowSet corresponds to a row in the table specified by input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R975</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] The rows in the RowSet are in a one-to-one order preserving correspondence with the rows in the table specified by input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1694</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] The Rows placed into the RowSet are exactly those rows that would be returned to the client in the ppRows output parameter of the NspiGetProps method, as specified in section 3.1.4.1.7, using the following parameters:
The NspiQueryRows parameter hRpc is used as the NspiGetProps parameter hRpc. 
The NspiQueryRows parameter dwFlags is used as the NspiGetProps parameter dwFlags. 
The NspiQueryRows input parameter pStat is used as the NspiGetProps parameter pStat. The CurrentRec field is set to the Minimal Entry ID of the row being returned.
The list of proptags the server constructs as specified by constraint 6 is used as the NspiGetProps parameter pPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R982</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] If a call to the NspiGetProps method with these parameters [hRpc, dwFlags, pStat and pPropTags] would return any value other than "Success" or "ErrorsReturned", the server MUST return that error code as the return value for the NspiQueryRows method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R983</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] Otherwise [If a call to the NspiGetProps method with parameters hRpc, dwFlags, pStat and pPropTags would return "Success" or "ErrorsReturned"], the server MUST return the RowSet constructed in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R985</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 15] If the server has no rows that satisfy this query, the server MUST return the value "Success" and place a PropertyRowSet_r with rows according to the input parameter "Count" in the output parameter ppRows, in which the property type fields of the property are all set to 0x0000000A (PtypErrorCode).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R986</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 15] If the server has no rows that satisfy this query [the query specified by method NspiQueryRows], the server MUST return the value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R988</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 16] If the server is using the table specified by the input parameter pStat, the server MUST update the status of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1701</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 16] This update [update the status of the table] MUST be exactly the same update that would occur via the NspiUpdateStat method with the following parameters:
The NspiQueryRows parameter hRpc is used as the NspiUpdateStat parameter hRpc.
The value 0 is used as NspiUpdateStat parameter Reserved. 
The NspiQueryRows output parameter pStat (as modified by the prior constraints) is used as the NSPIUpdateStat parameter pStat. The number of rows returned in the NspiQueryRows output parameter ppRows is added to the Delta field.
The value NULL is used as the NspiUpdateStat parameter plDelta. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R997</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.8</ns1:Doc_Sect>
		<ns1:Description>[In NspiQueryRows] [Server Processing Rules: Upon receiving message NspiQueryRows, the server MUST process the data from the message subject to the following constraints:] [Constraint 17] If no other return values have been specified by these constraints [constraints 1-16], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R998</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] The NspiSeekEntries method searches for and sets the logical position in a specific table to the first entry greater than or equal to a specified value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R999</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] Optionally, it [method NspiSeekEntries] might also return information about rows in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1681</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] The interface definition is: 
long NspiSeekEntries(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in, out] STAT* pStat,
  [in] PropertyValue_r* pTarget,
  [in, unique] PropertyTagArray_r* lpETable,
  [in, unique] PropertyTagArray_r* pPropTags,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1000</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1001</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] Reserved: A DWORD [MS-DTYP] value that is reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1002</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1702.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1702</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1002:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1003</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] pStat: A pointer to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1050, MS-OXNSPI_R1051, MS-OXNSPI_R1052, MS-OXNSPI_R1054, MS-OXNSPI_R1055.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1004</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [pStat] This parameter is used to both specify input parameters from the client and return values from the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1005</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] pTarget: A PropertyValue_r value holding the value that is being sought.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1006</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] lpETable: The value NULL or a PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1007</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [lpETable] It holds a list of Minimal Entry IDs that comprises a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1008</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] pPropTags: The value NULL or a reference to a PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1009</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [pPropTags] Contains list of the proptags of the columns that client wants to be returned for each row returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1058, MS-OXNSPI_R1695, MS-OXNSPI_R1755.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1010</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] ppRows: A reference to a PropertyRowSet_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1011</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [ppRows] Contains the address book container rows the server returns in response to the request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1630, MS-OXNSPI_R1058, MS-OXNSPI_R1695, MS-OXNSPI_R1755.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1012</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] Return Values: The server returns a long value specifying the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1013</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1016</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1017</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1018</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or whether the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1020</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the input parameter lpETable is not NULL and does not contain an Explicit Table both containing a restriction of the table specified by the input parameter pStat and sorted as specified by the SortType field of the input parameter pStat, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1021</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1022</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or whether the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1024</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the input parameter Reserved contains any value other than 0, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1025</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1026</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1630</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server returns any return values other than "Success", the server MUST return a NULL for the output parameter ppRows</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1631</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] [If the server returns any return values other than "Success", the server] MUST NOT modify the value of the parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1030</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The server MAY make additional validations as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1031</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1033</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1035</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input parameter lpETable is NULL, the server MUST use the table specified by the input parameter pStat when constructing the return parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1037</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the input parameter lpETable contains an Explicit Table, the server MUST use that table when constructing the return parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1039</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If the SortType field in the input parameter pStat has any value other than SortTypeDisplayName, the server MUST return the value GeneralFailure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1043</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] If the SortType field in the input parameter pStat is SortTypeDisplayName and the property specified in the input parameter pTarget is anything other than PidTagDisplayName (with either the Property Type PtypString8 or PtypString), the server MUST return the value GeneralFailure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1047</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] The server MUST locate the first row in the specified table that has a value equal to or greater than the value specified in the input parameter pTarget.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1048</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If no such row [the first row in the specified table that has a value equal to or greater than the value specified in the input parameter pTarget] exists, the server MUST return the value NotFound.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1050</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If a qualifying row was found, the server MUST update the position information in the parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1051</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] [If a qualifying row was found,] The server MUST set CurrentRec field of the parameter pStat to the Minimal Entry ID of the qualifying row.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1052</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If the server is using the table specified by the input parameter lpETable, the server MUST set the NumPos field of the parameter pStat to the accurate numeric position of the qualifying row in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1053</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If the server is using the table specified by the input parameter pStat, the server MUST set the NumPos field of the parameter pStat to the approximate numeric position of the qualifying row in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1054</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] The TotalRecs field of the parameter pStat MUST be set to the accurate number of records in the table used.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1055</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] The server MUST NOT modify any other fields [CodePage, ContainerID, Delta, SortLocale, SortType, TemplateLocale] of the parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1057</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] If the input parameter pPropTags is not NULL, the client is requesting the server to return an PropertyRowSet_r.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1058, MS-OXNSPI_R1695, MS-OXNSPI_R1755.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1058</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] Subject to the prior constraints [If the input parameter pPropTags is not NULL], the server MUST construct an PropertyRowSet_r to return to the client in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R105801</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 13]The server MUST return the same PropertyRowSet_r for the NspiSeekEntries method after the NspiQueryRows method is called using the input parameters. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1695</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [constraint 13] This PropertyRowSet_r MUST be exactly the same PropertyRowSet_r that would be returned in the ppRows parameter of a call to the NspiQueryRows method with the following parameters:
The NspiSeekEntries parameter hRpc is used as the NspiQueryRows parameter hRpc.
The value fEphID is used as the NspiQueryRows parameter dwFlags.
The NspiSeekEntries output parameter pStat (as modified by the prior constraints) is used as the NspiQueryRows parameter pStat.
If the NspiSeekEntries input parameter lpETable is NULL, the value 0 is used as the NspiQueryRows parameter dwETableCount, and the value NULL is used as the NspiQueryRows parameter lpETable.
If the NspiSeekEntries input parameter lpETable is NULL, the server MUST choose a value for the NspiQueryRows parameter Count. The Exchange Server NSPI Protocol does not prescribe any particular algorithm. The server MUST use a value greater than 0.
The NspiSeekEntries parameter pPropTags is used as the NspiQueryRows parameter pPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1755</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>This PropertyRowSet_r MUST be exactly the same PropertyRowSet_r that would be returned in the ppRows parameter of a call to the NspiQueryRows method with the following parameters:
The NspiSeekEntries parameter hRpc is used as the NspiQueryRows parameter hRpc.
The value fEphID is used as the NspiQueryRows parameter dwFlags.
The NspiSeekEntries output parameter pStat (as modified by the prior constraints) is used as the NspiQueryRows parameter pStat.
If the NspiSeekEntries input parameter lpETable is not NULL, the server constructs an explicit table from the table specified by lpETable by copying rows in order from lpETable to the new explicit table. The server begins copying from the row specified by the NumPos field of the pStat parameter (as modified by the prior constraints), and continues until all remaining rows are added to the new table. The number of rows in this new table is used as the NspiQueryRows parameter dwETableCount, and the new table is used as the NspiQueryRows lpETable parameter.
The list of Minimal Entry IDs in the input parameter lpETable starting with the qualifying row is used as the NspiQueryRows parameter lpETable. These Minimal Entry IDs [the list of Minimal Entry IDs in the input parameter lpETable] are expressed as a simple array of DWORD values rather than as a PropertyTagArray_r value. Note that the qualifying row is included in this list, and that the order of the Minimal Entry IDs from the input parameter lpETable is preserved in this list.
If the NspiSeekEntries input parameter lpETable is not NULL, the value used for the NspiQueryRows parameter dwETableCount is used for the NspiQueryRows parameter Count.
The NspiSeekEntries parameter pPropTags is used as the NspiQueryRows parameter pPropTags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1075</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] Note that the server MUST NOT modify the return value of the NspiSeekEntries output parameter pStat in any way in the process of constructing the output PropertyRowSet_r.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1076</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.9</ns1:Doc_Sect>
		<ns1:Description>[In NspiSeekEntries] [Server Processing Rules: Upon receiving message NspiSeekEntries, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] If no other return values have been specified by these constraints [constraints 1-13], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1077</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] The NspiGetMatches method returns an Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1078</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] The rows in the table are chosen based on two possible criteria: a restriction applied to an address book container or the values of a property on a single object that hold references to other objects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1682</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] The interface definition is: 
long NspiGetMatches(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved1,
  [in, out] STAT* pStat,
  [in, unique] PropertyTagArray_r* pReserved,
  [in] DWORD Reserved2,
  [in, unique] Restriction_r* Filter,
  [in, unique] PropertyName_r* lpPropName,
  [in] DWORD ulRequested,
  [out] PropertyTagArray_r** ppOutMIds,
  [in, unique] PropertyTagArray_r* pPropTags,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1079</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1080</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Reserved1: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1081</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] pStat: A reference to a STAT block describing a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1082</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] pReserved: A PropertyTagArray_r reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1083</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Reserved2: A DWORD value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1084</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Reserved2] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1899.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1899</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] If this field [Reserved2] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1084:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1085</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Filter: The value NULL or an Restriction_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1086</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Filter] Holds a logical restriction to apply to the rows in the address book container specified in the pStat parameter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1908</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When AndRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1909</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When OrRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1910</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When NotRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1911</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When ContentRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1912</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When PropertyRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1913</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When RestrictionUnion_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1914</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] When ExistRestriction_r is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1086:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1087</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] lpPropName: The value NULL or a PropertyName_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1088</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [lpPropName] Holds the property to be opened as a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1134, MS-OXNSPI_R1135.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1089</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] ulRequested: A DWORD value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1090</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [ulRequested] Contains the maximum number of rows to return in a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1091</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] ppOutMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1092</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [ppOutMIds] On return, it holds a list of Minimal Entry IDs that comprise a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1093</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] pPropTags: The value NULL or a reference to a PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1094</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [pPropTags] Contains list of the proptags of the columns that client wants to be returned for each row returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1095</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] ppRows: A reference to a PropertyRowSet_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1096</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [ppRows] Contains the address book container rows the server returns in response to the request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1155, MS-OXNSPI_R1696.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1097</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Return Values: The server returns a long value specifying the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1098</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1101</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1102</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1103</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1105</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the input parameter Filter contains any value other than NULL and the SortType field of the input parameter pStat contains any value other than SortTypeDisplayName or SortTypePhoneticDisplayName, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1106</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1107</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1109</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the input parameter Reserved1 contains any value other than 0, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1110</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1111</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1635</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server returns any return values other than "Success", the server MUST return a NULL for the output parameters ppOutMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1756</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server returns any return values other than "Success", the server MUST return a NULL for the output parameters ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1636</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] [If the server returns any return values other than "Success",] and [the server] MUST NOT modify the value of the parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1115</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The server MAY make additional validations as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1116</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1122</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input SortType field of the input parameter pStat is SortTypeDisplayName or SortTypePhoneticDisplayName and the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1124</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the input parameter Filter is not NULL, it [Filter field] specifies a restriction, as specified in [MS-OXCDATA].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1908, MS-OXNSPI_R1909, MS-OXNSPI_R1910, MS-OXNSPI_R1911, MS-OXNSPI_R1912, MS-OXNSPI_R1913, MS-OXNSPI_R1914.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1125</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] [If the input parameter Filter is not NULL, the server constructs an Explicit Table as follows:] If the server will not support the call because the search is too complex, the server MUST return the value "TooComplex".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1126</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] The Exchange Server NSPI Protocol does not prescribe what constitutes a search that is too complex.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1127</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the server will support the filter, it [server] identifies the rows in the table specified in the input parameter pStat for which the filter is true.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1128</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] [If the input parameter Filter is not NULL, the server constructs an Explicit Table as follows:] The Minimal IDs of these rows [rows specified in the input parameter pStat] are inserted into the Explicit Table, maintaining their order from the originating table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1639</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If the input parameter Filter is NULL, the server constructs an Explicit Table as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1131, MS-OXNSPI_R1134, MS-OXNSPI_R1135.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1130</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The Minimal Entry ID of the object the server is to read values from is specified in the CurrentRec field of the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1131</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The server MUST ignore any values of the Delta and ContainerID fields while locating the object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1132</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] That is, the server MUST NOT enforce any restrictions that the object specified by CurrentRec is actually in any particular address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1131.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1133</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] Note that this is an exceptional use of the pStat parameter for position, not conforming to the semantic meaning of this field [pStat parameter] in all other NSPI methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1134</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If the input parameter lpPropName is not NULL, it [lpPropName] specifies the property the server is to read the values of.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1135</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If the input parameter lpPropName is NULL, the server is to read the values of the property specified as a proptag value in the ContainerID field of the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1136</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] Note, this is an exceptional use of this field [lpPropName], not conforming to the semantic meaning of this field in all other NSPI methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1137</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] The server locates the object specified by the client, subject to these restraints [restraints specified by client].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1138</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] If the server is unable to locate the object, the server MUST return the value "GeneralFailure".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1139</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If the SortType field of the input parameter pStat has the value SortTypeDisplayName_W and the server does not support modifying the value of the property specified by the client on the object specified by the client, the server MUST return the value "NotSupported".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1140</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] If the server is unable to locate objects in the address book based on values of the property specified by the client on the object specified by the client, the server MUST return the value "NotSupported".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1141</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 12] Note that this constraint is intended to apply in the case where the server is categorically unable to locate specific objects based on the value of the property, not the case where the property has no values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1142</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] The server reads the values of the property specified by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1143</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] For each value read, the server tries to locate a specific object in the address book corresponding to this value [the value of the property specified by the client].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1144</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 13] If a specific object is located, the Minimal ID of the object is inserted into the Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1145</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 14] The server MUST sort the rows in Explicit Table by the Unicode representation of the value of the PidTagDisplayName property, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1146</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 15] If the server returns "Success", the server MUST set the ContainerID field of the output parameter pStat to be equal to the CurrentRec field of the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1147</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 15] The server MUST NOT modify any other fields in this parameter [pStat].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1149</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 16] If the number of rows in the constructed Explicit Table is greater than the input parameter ulRequested, the server MUST return the value "TableTooBig".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1151</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 17] If the server will not support the call because the Explicit Table is larger than the server will allow, the server MUST return the value "TableTooBig".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1152</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 17] The Exchange Server NSPI Protocol does not prescribe what constitutes a table that is too large.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1154</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 18] If the input parameter proptags is not NULL, the client is requesting the server to return a PropertyRowSet_r.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1155, MS-OXNSPI_R1696.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1155</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 18] Subject to the prior constraints, the server MUST construct a PropertyRowSet_r to return to the client in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1696</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [constraint 18] This PropertyRowSet_r MUST be exactly the same PropertyRowSet_r that would be returned in the ppRows parameter of a call to the NspiQueryRows method with the following parameters:
The NspiGetMatches parameter hRpc is used as the NspiQueryRows parameter hRpc. 
The value "fEphID" is used as the NspiQueryRows parameter dwFlags.
The NspiGetMatches output parameter pStat (as modified by the prior constraints) is used as the NspiQueryRows parameter pStat.
The number of Minimal Entry IDs in the constructed Explicit Table is used as the NspiQueryRows parameter dwETableCount.
The constructed Explicit Table is used as the NspiQueryRows parameter lpETable. These Minimal Entry IDs are expressed as a simple array of DWORD values rather than as a PropertyTagArray_r value.
The number of Minimal Entry IDs in the constructed Explicit Table is used as the NspiQueryRows parameter Count.
The NspiGetMatches parameter proptags is used as the NspiQueryRows parameter proptags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1165</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] Note that the server MUST NOT modify the return value of the NspiGetMatches method output parameter pStat in any way in the process of constructing the output PropertyRowSet_r.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1166</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] The server MUST return the constructed PropertyRowSet_r in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1167</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.10</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetMatches] [Server Processing Rules: Upon receiving message NspiGetMatches, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] If no other return values have been specified by these constraints [constraints 1-9], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1168</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] The NspiResortRestriction method applies a sort order to the objects in a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1683</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] The interface definition is: 
long NspiResortRestriction(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in, out] STAT* pStat,
  [in] PropertyTagArray_r* pInMIds,
  [in, out] PropertyTagArray_r** ppOutMIds
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1169</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1170</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1171</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1915.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1915</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1171:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1172</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] pStat: A reference to a STAT block describing a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1173</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] pInMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1174</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [pInMIds] It holds a list of Minimal Entry IDs that comprise a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1175</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] ppOutMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1869</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [ppOutMIds] The server MUST ignore this parameter in the request.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1870.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1870</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [ppOutMIds] If this field is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1869:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1176</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [ppOutMIds] On return, it holds a list of Minimal Entry IDs that comprise a restricted address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1189, MS-OXNSPI_R1201.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1177</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1178</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1181</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1182</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1183</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1185</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the SortType field of the input parameter pStat contains any value other than "SortTypeDisplayName" or "SortTypePhoneticDisplayName", the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1186</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1187</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1189</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server returns any return values other than "Success", the server MUST return a NULL for the output parameter ppOutMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1757</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] If the server returns any return values other than "Success", the server MUST NOT modify the value of the parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1191</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MAY make additional validations as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1192</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1194</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the SortType field in the input parameter pStat has any value other than SortTypeDisplayName the server MUST return the value "GeneralFailure".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1641</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server constructs an Explicit Table as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1196</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server locates all the objects specified in the Explicit Table specified by the input value pInMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1197</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST ignore any Minimal Entry IDs that do not specify an object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1198</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] For each such object located, a row is inserted into the constructed Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1199</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST sort the rows in the constructed explicit table by the property specified in the SortType field of the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1201</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] The server MUST return the constructed Explicit Table in the output parameter ppOutMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1204</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] The Server MUST update the output parameter pStat as follows: The TotalRecs field is set to the number of objects in the constructed Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1205</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 8 The Server MUST update the output parameter pStat as follows:] If the object specified by the CurrentRec field of the input parameter pStat is not in the constructed Explicit Table, the NumPos field of the output parameter pStat is set to the value 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1759</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 8 The Server MUST update the output parameter pStat as follows:] If the object specified by the CurrentRec field of the input parameter pStat is not in the constructed Explicit Table, the CurrentRec field of the output parameter pStat is set to the value MID_BEGINNING_OF_TABLE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1207</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 8 The Server MUST update the output parameter pStat as follows:] The server MUST NOT modify any other fields of the output parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1209</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.11</ns1:Doc_Sect>
		<ns1:Description>[In NspiResortRestriction] [Server Processing Rules: Upon receiving message NspiResortRestriction, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If no other return values have been specified by these constraints [constraints 1-8], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1210</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] The NspiCompareMIds method compares the position in an address book container of two objects identified by Minimal Entry ID and returns the value of the comparison.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1684</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] The interface definition is: 
long NspiCompareMIds(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] STAT* pStat,
  [in] DWORD MId1,
  [in] DWORD MId2,
  [out] long* plResult
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1211</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1212</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1213</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1699.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1699</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] If this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1213:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1214</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] pStat: A reference to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1215</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] MId1: A DWORD value containing a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1216</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] MId2: A DWORD value containing a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1217</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] plResult: A pointer to a long value [which specifies the compare result of the NspiCompareMids method. ]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1218</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [plResult: A pointer to a long value] which specifies the compare result of the NspiCompareMids method. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1232, MS-OXNSPI_R1236, MS-OXNSPI_R1238, MS-OXNSPI_R1240.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1219</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1220</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1223</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1224</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1225</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1227</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1228</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1230</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1232</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server returns any return value other than "Success", the protocol does not constrain the value in the return parameter plResult.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1234</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server is unable to locate the objects specified by the input parameters MId1 or MId2 in the table specified by the ContainerID field of the input parameter pStat, the server MUST return the return value "GeneralFailure".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1236</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the position of the object specified by MId1 comes before the position of the object specified by MId2 in the table specified by the field ContainerID of the input parameter pStat, the server MUST return a value less than 0 in the output parameter plResult.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1238</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the position of the object specified by MId1 comes after the position of the object specified by MId2 in the table specified by the field ContainerID of the input parameter pStat, the server MUST return a value greater than 0 in the output parameter plResult.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1240</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the position of the object specified by MId1 is the same as the position of the object specified by MId2 in the table specified by the ContainerID field of the input parameter pStat (that is, they specify the same object), the server MUST return a value of 0 in the output parameter plResult.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1242</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.12</ns1:Doc_Sect>
		<ns1:Description>[In NspiCompareMIds] [Server Processing Rules: Upon receiving message NspiCompareMIds, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If no other return values have been specified by these constraints [constraints 1-8], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1243</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] The NspiDNToMId method maps a set of DNs to a set of Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1685</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] The interface definition is: 
long NspiDNToMId(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] StringsArray_r* pNames,
  [out] PropertyTagArray_r** ppMIds
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1244</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1245</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1246</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Reserved] Ignored by the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1700.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1700</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] if this field [Reserved] is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1246:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1247</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] pNames: A StringsArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1248</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [pNames] It holds a list of strings that contain DNs, as specified in [MS-OXOABK].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1249</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] ppMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1250</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [ppMIds] On return, it holds a list of Minimal Entry IDs.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1264.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1251</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1252</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1255</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameter ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1257</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations as described in section 5).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1258</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1260</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server is unable to locate an appropriate mapping between a DN and a Minimal Entry ID, it [server] MUST map the DN to a Minimal Entry ID with the value 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1262</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server constructs a list of Minimal Entry IDs to return to the client, encoding the mappings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1263</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The list is in a one-to-one order preserving correspondence with the list of DNs in the input parameter pNames.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1264</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MUST return the list in the output parameter ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1266</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.13</ns1:Doc_Sect>
		<ns1:Description>[In NspiDNToMId] [Server Processing Rules: Upon receiving message NspiDNToMId, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If no other return values have been specified by these constraints [constraints 1-4], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1267</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] The NspiModProps method is used to modify the properties of an object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1268</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] This protocol supports the PidTagUserX509Certificate ([MS-OXPROPS] section 2.1048) and PidTagAddressBookX509Certificate ([MS-OXPROPS] section 2.569) properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1686</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] The interface definition is: 
long NspiModProps(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] STAT* pStat,
  [in, unique] PropertyTagArray_r* pPropTags,
  [in] PropertyRow_r* pRow
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1269</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1270</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] Reserved: A DWORD [MS-DTYP] value reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1271</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] pStat: A reference to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1272</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] pPropTags: The value NULL or a reference to a PropertyTagArray_r.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1273</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [pPropTags] Contains list of the proptags of the columns that client requests all values to be removed from.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1274</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] pRow: A PropertyRow_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1275</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [pRow] Contains an address book row.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1276</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1277</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1280</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1281</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1282</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1284</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server returns any return value other than "Success", the server MUST NOT modify any properties of any objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1286</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1287</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1289</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the Reserved input parameter contains any value other than 0, the server MUST ignore the value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1291</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the input parameter pPropTags is NULL, the server MUST return the value "InvalidParameter".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1293</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the server is unable to locate the object specified by the CurrentRec field of the input parameter pStat, the server MUST return the value "InvalidParameter".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1295</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the server is able to locate the object, but will not allow modifications to the object due to its display type, the server MUST return the value "InvalidObject".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1297</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] The server MUST remove all values for all properties specified in the input parameter pPropTags from the object specified by the field CurrentRec in the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1299</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] The server MUST remove all values for all properties specified in the input parameter pRow from the object specified by the field CurrentRec in the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1301</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 10] The server SHOULD&lt;6&gt; add all values for all properties specified in the input parameter pRow to the object specified by the field CurrentRec in the input parameter pStat.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1303</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [Constraint 11] If the server is unable to apply the modifications specified for any other reason, the server MUST return the value "AccessDenied".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1305</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.14</ns1:Doc_Sect>
		<ns1:Description>[In NspiModProps] [Server Processing Rules: Upon receiving message NspiModProps, the server MUST process the data from the message subject to the following constraints:] [constraint 12] If no other return values have been specified by these constraints [constraints 1-11], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1306</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] The NspiModLinkAtt method modifies the values of a specific property of a specific row in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1307</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] This protocol only supports modifying the value of the PidTagAddressBookMember property ([MS-OXOABK] section 2.2.6.1) of an address book object with display type DT_DISTLIST and the PidTagAddressBookPublicDelegates property ([MS-OXOABK] section 2.2.5.5) of an address book object with display type DT_MAILUSER.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirements: MS-OXNSPI_R1893, MS-OXNSPI_R2002.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1893</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] This protocol supports modifying the value of the PidTagAddressBookMember ([MS-OXPROPS] section 2.541) property of an address book object with display type DT_DISTLIST.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1307:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2002</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] This protocol supports modifying the value of the PidTagAddressBookPublicDelegates ([MS-OXPROPS] section 2.557) property of an address book object with display type DT_MAILUSER.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1307:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1687</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] The interface definition is:
long NspiModLinkAtt(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD dwFlags,
  [in] DWORD ulPropTag,
  [in] DWORD dwMId,
  [in] BinaryArray_r* lpEntryIds
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1308</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1309</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1310</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [dwFlags] The server MUST ignore values other than the bit flag fDelete.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1927.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1927</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] If dwFlags is set to different values other than the bit flag fDelete, server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1310:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1311</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] ulPropTag: A DWORD value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1312</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [ulPropTag] Contains the proptag of the property that the client wants to modify.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1326, MS-OXNSPI_R1332, MS-OXNSPI_R1335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1313</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] dwMId: A DWORD value that contains the Minimal Entry ID of the address book row that the client wants to modify.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1328, MS-OXNSPI_R1332, MS-OXNSPI_R1335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1314</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] lpEntryIds: A BinaryArray value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1315</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [lpEntryIds] Contains a list of EntryIDs to be used to modify the requested property on the requested address book row.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1332, MS-OXNSPI_R1335.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1316</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [lpEntryIds] These EntryIDs [EntryIDs used to modify the requested property] can be either Ephemeral Entry IDs or Permanent Entry IDs or both.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1317</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1318</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1321</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the server returns any return value other than "Success" (0x00000000), , the server MUST NOT modify any properties of any objects in the address book.&lt;7&gt;</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirements:MS-OXNSPI_R2003009, MS-OXNSPI_R2003010</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1323</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations, as described in section 5).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1324</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1326</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the input parameter ulPropTag does not specify a proptag the server recognizes, the server MUST return NotFound.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1328</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server is unable to locate the object specified by the input parameter dwMId, the server MUST return the value "InvalidParameter" (0x80070057).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1646</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server is able to locate the object, but will not allow modifications to the object due to its display type, the server MUST NOT modify any properties of any objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1647</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] [If the server is able to locate the object, but will not allow modifications to the object due to its display type,] the server MUST return the value AccessDenied (0x80070005).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1332</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the input parameter dwFlags contains the bit value fDelete, the server MUST remove all values specified by the input parameter lpEntryIDs from the property specified by ulPropTag for the object specified by input parameter dwMId.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1333</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST ignore any values specified by lpEntryIDs that are not present on the object specified by dwMId.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1335</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] If the input parameter dwFlags does not contain the bit value fDelete, the server MUST add all values specified by the input parameter lpEntryIDs to the property specified by ulPropTag for the object specified by the input parameter dwMId.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1336</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] The server MUST ignore any values specified by lpEntryIDs that are already present on the object specified by dwMId.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1338</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If the server is unable to apply the modifications specified, the server MUST return the value "AccessDenied" (0x80070005).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1340</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.15</ns1:Doc_Sect>
		<ns1:Description>[In NspiModLinkAtt] [Server Processing Rules: Upon receiving message NspiModLinkAtt, the server MUST process the data from the message subject to the following constraints:] [Constraint 9] If no other return values have been specified by these constraints [constraints 1-8], the server MUST return the return value "Success" (0x00000000).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1341</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] The NspiResolveNames method takes a set of string values in an 8-bit character set and performs ANR (as specified in section 3.1.4.7) on those strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1342</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] The server reports the Minimal Entry ID that is the result of the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1343</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] Certain property values are returned for any valid Minimal Entry IDs identified by the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1688</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] The interface definition is: 
long NspiResolveNames(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] STAT* pStat,
  [in, unique] PropertyTagArray_r* pPropTags,
  [in] StringsArray_r* paStr,
  [out] PropertyTagArray_r** ppMIds,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1344</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1345</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] Reserved: A DWORD [MS-DTYP] reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1346</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] pStat: A reference to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1347</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] pPropTags: The value NULL or a reference to a PropertyTagArray_r value containing a list of the proptags of the columns that the client requests to be returned for each row returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1348</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] paStr: A StringsArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1349</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [paStr] Specifies the values the client is requesting the server to do ANR on.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1350</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [paStr] The server MUST apply any necessary character set conversion as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1351</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] ppMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1352</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [ppMIds] On return, contains a list of Minimal Entry IDs that match the array of strings, as specified in the input parameter paStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1377.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1353</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] ppRows: A reference to a PropertyRowSet_r structure (section 2.2.4), [which contains the address book container rows that the server returns in response to the request.]</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1354</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [ppRows: A reference to a PropertyRowSet_r structure (section 2.2.4), ] which contains the address book container rows that the server returns in response to the request. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1355</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1356</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1359</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1360</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1361</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1363</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the input parameter Reserved contains any value other than 0, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1364</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1365</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1367</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameters ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1760</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameters ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1369</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1370</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1372</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1374</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server constructs a list of the Minimal Entry IDs specified in section 2.2.1.9 to return to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1375</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] These Minimal Entry IDs [IDs which server constructs and returns to client] are those that result from applying the ANR process, as specified in section 3.1.4.7, to the strings in the input parameter paStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1377</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST return this list of Minimal Entry IDs [Minimal Entry IDs resulted from applying the ANR process] in the output parameter ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1379</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] Subject to the prior constraints, the server MUST construct a PropertyRowSet_r to return to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1392</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.16</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNames] [Server Processing Rules: Upon receiving message NspiResolveNames, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If no other return values have been specified by these constraints [constraints 1-8], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1393</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] The NspiResolveNamesW method takes a set of string values in the Unicode character set and performs ANR (as specified in section 3.1.4.7) on those strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1394</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] The server reports the Minimal Entry IDs that are the result of the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1395</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] Certain property values are returned for any valid Minimal Entry IDs identified by the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1689</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] The interface definition is:
 long NspiResolveNamesW(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD Reserved,
  [in] STAT* pStat,
  [in, unique] PropertyTagArray_r* pPropTags,
  [in] WStringsArray_r* paWStr,
  [out] PropertyTagArray_r** ppMIds,
  [out] PropertyRowSet_r** ppRows
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1396</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1397</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] Reserved: A DWORD [MS-DTYP] value that is reserved for future use.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1398</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] pStat: A reference to a STAT block that describes a logical position in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1399</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] pPropTags: The value NULL or a reference to a PropertyTagArray_r containing a list of the proptags of the columns that the client requests to be returned for each row returned.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1400</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] paWStr: A WStringsArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1401</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [paWStr] Specifies the values on which the client is requesting that the server perform ANR.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1650.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1402</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [paWStr] The server MUST apply any necessary character set conversion, as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1403</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] ppMIds: A PropertyTagArray_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1650</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [ppMIds] On return, contains a list of Minimal Entry IDs that match the array of strings, as specified in the input parameter paWStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1404</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] ppRows: A reference to a PropertyRowSet_r structure (section 2.2.4), [which contains the address book container rows that the server returns in response to the request.] </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1405</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [ppRows: A reference to a PropertyRowSet_r structure (section 2.2.4), ] which contains the address book container rows that the server returns in response to the request. </ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1406</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1407</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1410</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the CodePage field of the input parameter pStat contains the value CP_WINUNICODE, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1411</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1412</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1414</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the input parameter Reserved contains any value other than 0, the server MUST return one of the return values [Success, UnbindSuccess, UnbindFailure, ErrorsReturned, GeneralFailure, NotSupported, InvalidObject, OutOfResources, NotFound, LogonFailed, TooComplex, InvalidCodepage, InvalidLocale, TableTooBig, InvalidBookmark, AccessDenied, NotEnoughMemory and InvalidParameter] specified in section 2.2.1.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1415</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] No further constraints are applied to server processing of this method; in this case server behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1416</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] Note especially that there is no constraint on the data the server returns in any output parameter other than the return value, nor is there any constraint on how or if the server changes its state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1418</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameters ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1761</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameters ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1420</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1421</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1423</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server is unable to locate the address book container specified by the ContainerID field in the input parameter pStat, the server MUST return the return value "InvalidBookmark".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1425</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server constructs a list of the Minimal Entry IDs specified in section 2.2.1.9 to return to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1426</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] These Minimal Entry IDs are those that result from the ANR process, as specified in section 3.1.4.7, to the strings in the input parameter paWStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1428</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST return this list of Minimal Entry IDs [Minimal Entry IDs resulted from the ANR process] in the output parameter ppMIds.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1430</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] Subject to the prior constraints, the server MUST construct a PropertyRowSet_r to return to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1443</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.17</ns1:Doc_Sect>
		<ns1:Description>[In NspiResolveNamesW] [Server Processing Rules: Upon receiving message NspiResolveNamesW, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If no other return values have been specified by these constraints [constraints 1-8], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1444</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] The NspiGetTemplateInfo method returns information about template objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1690</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] The interface definition is: 
long NspiGetTemplateInfo(
  [in] NSPI_HANDLE hRpc,
  [in] DWORD dwFlags,
  [in] DWORD ulType,
  [string, in, unique] char* pDN,
  [in] DWORD dwCodePage,
  [in] DWORD dwLocaleID,
  [out] PropertyRow_r** ppData
);</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1445</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] hRpc: An RPC context handle, as specified in section 2.2.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1446</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] dwFlags: A DWORD [MS-DTYP] value that contains a set of bit flags.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1447</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [dwFlags] The server MUST ignore values other than the bit flags TI_SCRIPT and TI_TEMPLATE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1692.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1692</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [dwFlags] If the bits are set to different values other than the bit flags TI_SCRIPT and TI_TEMPLATE, the server will return the same value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1447:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1448</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] ulType: A DWORD value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1449</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [ulType] Specifies the display type of the template for which information is requested.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1450</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] pDN: The value NULL or the DN of the template requested.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1451</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [pDN] The value is NULL-terminated.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1452</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] dwCodePage: A DWORD value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1453</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [dwCodePage] Specifies the code page of the template for which information is requested.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1454</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] dwLocaleID: A DWORD value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1455</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [dwLocaleID] Specifies the LCID, as specified in [MS-LCID], of the template for which information is requested.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1456</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] ppData: A reference to a PropertyRow_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1457</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [ppData] On return, it contains the information requested.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1462, MS-OXNSPI_R1490.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1458</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] Return Values: The server returns a long value that specifies the return status of the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1459</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] Exceptions Thrown: No exceptions are thrown beyond those thrown by the underlying RPC protocol, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1462</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 1] If the server returns any return value other than "Success", the server MUST return the value NULL in the return parameters ppData.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1464</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] The server MAY make additional validations, as described in section 5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1465</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 2] If the server chooses to limit the visibility of data based on these validations [additional validations], the server MUST proceed as if that data did not exist in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1467</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 3] If the codepage specified in the dwCodePage input parameter has the value CP_WINUNICODE, the server MUST return the value "InvalidCodePage".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1469</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 4] If the server does not recognize the codepage specified in the dwCodePage input parameter as a supported code page, the server MUST return the value "InvalidCodePage".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1654</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The server locates the template for which it [server] will return information as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1471</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the input parameter pDN is NULL, the server MUST choose an appropriate template object for the display type specified by the input parameter ulType and for the LCID specified by the input parameter dwLocaleID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1472</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] The specific choice of an appropriate template object is defined by local policy, and is not constrained by the Exchange Server NSPI Protocol. For details, see [MS-OXOABKT].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1474</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the input parameter pDN is not NULL, it [pDN] specifies the DN of a template object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1980</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] In this case [If the input parameter pDN is not NULL], the server MUST ignore the input parameters ulType.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1982.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1982</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] If the input parameter pDN is not NULL and input parameter ulType is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1980:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1981</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] In this case [If the input parameter pDN is not NULL], the server MUST ignore the input parameters dwLocaleID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1983.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1983</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] If the input parameter pDN is not NULL and input parameter dwLocaleID is set to different values, the server will return the same result.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1981:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1476</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 5] If the server is unable to locate a specific object based on these constraints [constraints 1-4], the server MUST return the value "InvalidLocale".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1478</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server constructs a PropertyRow_r value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1655</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The property values in this PropertyRow_r are specified as follows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1483</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the input parameter dwFlags has the TI_SCRIPT bit set, the client is requesting the script data for the template, as specified in [MS-OXOABKT].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1484.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1484</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] The server MUST place this data [the script data for the template] into the PropertyRow_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1485</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] If the input parameter dwFlags has the TI_TEMPLATE bit set, the client is requesting the user interface data for the template, as specified in the [MS-OXOABKT].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1486.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1486</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 6] [If the input parameter dwFlags has the TI_TEMPLATE bit set] The server MUST place this data [the user interface data for the template] into the PropertyRow_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1490</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 7] The server MUST return the constructed PropertyRow_r structure in the output parameter ppData.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1492</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.1.18</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo] [Server Processing Rules: Upon receiving message NspiGetTemplateInfo, the server MUST process the data from the message subject to the following constraints:] [Constraint 8] If no other return values have been specified by these constraints [constraints 1-7], the server MUST return the return value "Success".</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1721</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagObjectType, which is defined in [MS-OXOABK] section 2.2.3.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1722</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagInitialDetailsPane, which is defined in [MS-OXOABK] section 2.2.3.33.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1723</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagAddressBookDisplayNamePrintable, which is defined in [MS-OXOABK] section 2.2.3.7.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1724</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagAddressBookContainerId, which is defined in [MS-OXOABK] section 2.2.2.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1725</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagEntryId, which is defined in [MS-OXOABK] section 2.2.3.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1726</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagInstanceKey, which is defined in [MS-OXOABK] section 2.2.3.6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1727</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagSearchKey, which is defined in [MS-OXOABK] section 2.2.3.5.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1728</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagRecordKey, which is defined in [MS-OXOABK] section 2.2.3.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1729</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagAddressType, which is defined in [MS-OXOABK] section 2.2.3.13.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1730</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagEmailAddress, which is defined in [MS-OXOABK] section 2.2.3.14.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1731</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagDisplayType, which is defined in [MS-OXOABK] section 2.2.3.11.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1732</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagTemplateid, which is defined in [MS-OXOABK] section 2.2.3.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1733</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagTransmittableDisplayName, which is defined in [MS-OXOABK] section 2.2.3.8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1734</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagDisplayName, which is defined in [MS-OXOABK] section 2.2.3.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1735</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagMappingSignature, which is defined in [MS-OXOABK] section 2.2.3.32.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1736</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] For every object in the address book, the server MUST minimally maintain the property: PidTagAddressBookObjectDistinguishedName, which is defined in [MS-OXOABK] section 2.2.3.15.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1737</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] The server MUST maintain the property PidTagContainerContents, which is defined in [MS-OXOABK] [MS-OXOABK] section 2.2.6.3, and has a PidTagObjectType property with the DISTLIST value, as specified in [MS-OXOABK] section 2.2.3.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1738</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] The server MUST maintain the property PidTagContainerFlags, which is defined in [MS-OXOABK] section 2.2.2.1, and has a PidTagObjectType property with the DISTLIST value, as specified in [MS-OXOABK] section 2.2.3.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1874</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Properties] If the server does not conform to the preceding rules, client behavior is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R431</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In String Handling] A server holds values of properties for objects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R432</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In String Handling] Some of these values [values of properties for objects] are strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R433</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In String Handling] The Exchange Server NSPI Protocol allows string values to be represented as 8-bit character strings or Unicode strings.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R434</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In String Handling] All string valued properties held by a server are categorized as either natively of property type PtypString or natively of property type PtypString8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R435</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3</ns1:Doc_Sect>
		<ns1:Description>[In String Handling] Those properties natively of property type PtypString8 are further categorized as either case-sensitive or case-insensitive.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1595</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] Unless otherwise specified in this document, the Exchange Server NSPI Protocol does not constrain the categorization of properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1596</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] Clients and servers MUST NOT require specific categorizations.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1597</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] However, because the protocol intends for clients to be able to persist sorted string values across multiple NSPI connections to a server, a server MUST NOT modify its native categorization for string properties after the categorization has been determined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1598</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] As doing so [If the server modifies its native categorization for string properties after the categorization has been determined] would lead to inconsistent behavior of NSPI methods across multiple NSPI sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R438</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] The following table lists those properties [PidTagDisplayName, PidTagAddressBookPhoneticDisplayName and PidTagAddressBookDisplayNamePrintable] categorization for which is specified by the Exchange Server NSPI Protocol, and the categorization of those properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1599</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] The categorization of PidTagDisplayName is PtypString.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1600</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] The categorization of PidTagAddressBookPhoneticDisplayName is PtypString.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1601</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Required Native Categorizations] The categorization of PidTagAddressBookDisplayNamePrintable is PtypString8, case sensitive.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R439</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] While processing an NSPI method, a server associates a code page with all strings expressed as parameters in the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R440</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] The server MUST at a minimum be able to convert string representations between the Unicode code page CP_WINUNICODE and the TELETEX code page CP_TELETEX.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R441</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] Clients specify a code page for 8-bit strings in input parameters to server methods.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R442</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] This protocol does not specify conversion rules.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R443</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] However, because the protocol allows for clients to be able to reliably access data that has been so converted, after a server uses an algorithm, it [server] MUST NOT modify its algorithm for converting between string representations in different code pages.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R444</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Required Code Page Support] Doing so [modify the algorithm for converting between string representations in different code pages] would lead to inconsistent behavior of NSPI methods across multiple NSPI sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R445</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] When returning string values as output parameters for methods where the method allows for both Unicode and 8-bit character representations, the server MUST adhere to the following conversion rules.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1933, MS-OXNSPI_R1934, MS-OXNSPI_R1935, MS-OXNSPI_R1936, MS-OXNSPI_R1937, MS-OXNSPI_R1938, MS-OXNSPI_R1939, MS-OXNSPI_R1941, MS-OXNSPI_R1942, MS-OXNSPI_R1943, MS-OXNSPI_R1944, MS-OXNSPI_R1945, MS-OXNSPI_R1946, MS-OXNSPI_R1947, MS-OXNSPI_R1950, MS-OXNSPI_R1951, MS-OXNSPI_R1952, MS-OXNSPI_R1953, MS-OXNSPI_R1954, MS-OXNSPI_R1955, MS-OXNSPI_R1958, MS-OXNSPI_R1959, MS-OXNSPI_R1960, MS-OXNSPI_R1961, MS-OXNSPI_R1962, MS-OXNSPI_R1963.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R446</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter, or the dwCodePage parameter prior to returning the value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1933</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetSpecialTable] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1934</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetProps] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1935</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiQueryRows] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1936</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetMatches] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1937</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiSeekEntries] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1938</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNames] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1939</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNamesW] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R19391</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetTemplateInfo] If the native type of a property is PtypString and the client has requested that property with the type PtypString8, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the dwCodePage parameter prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R446:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R447</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1941</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetSpecialTable] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1942</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetProps] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1943</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiQueryRows] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1944</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetMatches] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1945</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiSeekEntries] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1946</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNames] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1947</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNamesW] If the native type of a property is PtypString and the client has requested that property with the type PtypString, the server MUST return the Unicode representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R447:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R448</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1950</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetProps] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1951</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiQueryRows] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1952</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetMatches] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1953</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiSeekEntries] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1954</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNames] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1955</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNamesW] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString, the server MUST convert the 8-bit character representation to a Unicode representation prior to returning the value.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R448:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R449</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] The 8-bit character representation is considered to be in the code page CP_TELETEX.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R450</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1958</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetProps] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1959</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiQueryRows] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1960</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiGetMatches] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1961</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiSeekEntries] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1962</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNames] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1963</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] [For method NspiResolveNamesW] If the native type of a property is PtypString8 and the client has requested that property with the type PtypString8, the server MUST return the 8-bit character representation unmodified.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R450:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R451</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] Servers MAY undertake other conversions and substitutions for specific properties.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R452</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] The following table lists NSPI methods that are capable of returning string values in both Unicode and 8-bit character representations, and the methods for which the conversion rules are applicable.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1664, MS-OXNSPI_R1665, MS-OXNSPI_R1666, MS-OXNSPI_R1668, MS-OXNSPI_R1669, MS-OXNSPI_R1670, MS-OXNSPI_R1671, MS-OXNSPI_R1672, MS-OXNSPI_R1673, MS-OXNSPI_R1674, MS-OXNSPI_R1675, MS-OXNSPI_R1676, MS-OXNSPI_R1677, MS-OXNSPI_R1678, MS-OXNSPI_R1679.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R453</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetTemplateInfo method, String values can be returned in the output parameter ppData.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R454</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetSpecialTable method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1966</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetSpecialTable method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R454:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1967</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetSpecialTable method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R454:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R455</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetProps method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1968</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetProps method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R455:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1969</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetProps method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R455:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R456</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiQueryRows method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1970</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiQueryRows method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R456:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1971</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiQueryRows method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R456:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R457</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetMatches method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1972</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetMatches method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R457:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1973</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiGetMatches method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R457:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R458</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiSeekEntries method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1974</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiSeekEntries method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R458:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1975</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiSeekEntries method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R458:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R459</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNames method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1976</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNames method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R459:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1977</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNames method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R459:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R460</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNamesW method, String values can be returned in the output parameter ppRows.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1978</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNamesW method, String values can be returned in Unicode representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R460:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1979</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.3</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Server to the Client] In NspiResolveNamesW method, String values can be returned in 8-bit character representation in the output parameter ppRows.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R460:c</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R461</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] When accepting strings as input parameters for methods where the method allows for both Unicode and 8-bit character representations, the server MUST follow these conversion rules [rules about how server convert string values].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R462</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] If the native type of a property is PtypString8 and the client has specified a property value with the type PtypString, the server MUST convert the Unicode representation to an 8-bit character representation in the code page specified by the CodePage field of the pStat parameter prior to processing the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R463</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] If the native type of a property is PtypString8 and the client has specified a property value with the type PtypString8, the server MUST leave the 8-bit character representation unmodified while processing the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R464</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] If the native type of a property is PtypString and the client has specified a property value with the type PtypString8, the server MUST convert the 8-bit character representation to a Unicode representation prior to processing the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R465</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] The 8-bit character representation is considered to be in the code page specified by the CodePage field of the pStat parameter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R466</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] If the native type of a property is PtypString and the client has specified a property value with the type PtypString, the server MUST leave the Unicode representation unmodified while processing the method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R467</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] The following table lists NSPI methods that are capable of specifying input parameters that contain string values in both Unicode and 8-bit character representations, and methods for which these conversion rules [rules listed above about how server convert string values] are applicable.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R468</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] In NspiModProps method, String values can be specified in the input parameter pRow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R469</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] In NspiSeekEntries method, String values can be specified in the input parameter pTarget.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R470</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server]In NspiGetMatches method, String values can be specified in the input parameter Filter.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R471</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] In NspiResolveNames method, String values can be specified in the input parameter paStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R472</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.4</ns1:Doc_Sect>
		<ns1:Description>[In Conversion Rules for String Values Specified by the Client to the Server] In NspiResolveNamesW method, String values can be specified in the input parameter paWStr.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R473</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5</ns1:Doc_Sect>
		<ns1:Description>[In String Comparison] Servers MUST implement comparison between string values.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R474</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5</ns1:Doc_Sect>
		<ns1:Description>[In String Comparison] This comparison yields the normal semantics of less than, equal to, and greater than.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R475</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] Servers MUST compare Unicode representations of strings as specified in [MS-UCODEREF].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R476</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] All methods in which a server is required to perform such Unicode string comparison include LCID as part of the input parameters.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R477</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] The server SHOULD compare the strings using the closest supported LCID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R478</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] The Exchange Server NSPI Protocol does not constrain how a server chooses this closest supported LCID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R479</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] However, because the protocol intends for clients to be able to persist sorted string values across multiple NSPI connections to a server, a Exchange server SHOULD NOT modify its algorithm for choosing the closest LCID after an algorithm has been implemented because doing so would lead to inconsistent behavior of NSPI methods across multiple NSPI sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R480</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] The server MUST minimally support the LCID NSPI_DEFAULT_LOCALE flag, as specified in section 2.2.1.4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R481</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] When making comparisons of Unicode string values, if the server uses LCID NSPI_DEFAULT_LOCALE, the server MUST also use the NSPI_DEFAULT_LOCALE_COMPARE_FLAGS flag for the comparison.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R482</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Unicode String Comparison] Otherwise [making comparisons of Unicode string values, if the server does not use LCID NSPI_DEFAULT_LOCALE], the server MUST use the NSPI_NON_DEFAULT_LOCALE_COMPARE_FLAGS flag.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R484</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] If the strings are categorized as case-sensitive, the server MUST implement a case-sensitive buffer comparison.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R485</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] If the strings are case-insensitive, the server MUST implement a case-insensitive buffer comparison.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R486</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] The Exchange Server NSPI Protocol does not constrain how a server implements these comparison functions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R487</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] However, because the protocol intends for clients to be able to persist sorted string values across multiple NSPI connections to a server, a server MUST NOT modify its algorithm for either of these buffer comparison functions, because doing so would lead to inconsistent behavior of NSPI methods across multiple NSPI sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R488</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:]If the buffer representing one of the string values is shorter than the buffer representing the other string value, then the server considers the string value represented by the shorter buffer to be less than the string represented by the longer buffer.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R489</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] No further comparison steps are taken.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R490</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] If the buffers representing the two string values have equal lengths, the comparison function implemented by the server MUST determine that one buffer is less than the other, or that the buffers are equal.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R491</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] If the comparison function determines that one of the buffers is less than the other, then the server considers the string value represented by the lesser buffer to be less than the string value represented by the greater buffer.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R492</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] No further comparison steps are taken.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R493</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.5.2</ns1:Doc_Sect>
		<ns1:Description>[In 8-Bit String Comparison] [When making comparisons of 8-bit character string values, the server MUST compare according to the following series of steps:] If the comparison function determines that the two buffers are equal, the server considers the two string values to be equal.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R494</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.6</ns1:Doc_Sect>
		<ns1:Description>[In String Sorting] Every server MUST support sorting on Unicode string representations for the PidTagDisplayName property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R495</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.6</ns1:Doc_Sect>
		<ns1:Description>[In String Sorting] If the server supports the SortTypePhoneticDisplayName sort order, it [server] MUST also support sorting on Unicode string representation for the PidTagAddressBookPhoneticDisplayName property.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R496</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.6</ns1:Doc_Sect>
		<ns1:Description>[In String Sorting] The server MUST minimally support the LCID NSPI_DEFAULT_LOCALE flag.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1605</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.3.6</ns1:Doc_Sect>
		<ns1:Description>[In String Sorting] This sorting [sorting on Unicode string] conforms to that specified in [MS-UCODEREF].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R497</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Tables] In order to achieve the primary goal of the Exchange Server NSPI Protocol (browsing address book containers), the protocol defines a data model based on tables.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R498</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4</ns1:Doc_Sect>
		<ns1:Description>[In Tables] Two types of tables are used in the data model for the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R499</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] The first type of table specified by the Exchange Server NSPI Protocol is the Status-Based Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R500</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] This table [Status-Based Table] directly represents an address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R501</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] A Status-Based Table is specified in the protocol by the use of a STAT data structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R502</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] The data structure identifies an address book container, the order of objects in the address book container as exposed by the table, and positioning in the address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R503</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] The server is not required to maintain any state for a Status-Based Table; the state of the table is entirely specified by the fields of the STAT data structure, which is passed back and forth between the client and the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R504</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.1</ns1:Doc_Sect>
		<ns1:Description>[In Status-Based Tables] Therefore, a single client can have multiple instances of an "open" address book container, each specified by a separate STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R505</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Explicit Tables] The second type of table specified by the Exchange Server NSPI Protocol is the Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R506</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Explicit Tables] This table [Explicit Table] is implemented as a list of Minimal Entry IDs.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R507</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Explicit Tables] The list [a list of Minimal Entry IDs] is instantiated in the protocol either as an array of DWORDs or as a PropertyTagArray_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R508</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Explicit Tables] This kind of table [Explicit Table] is used to implement Restriction-Based Explicit Tables and Property Value-Based Explicit Tables.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R509</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Restriction-Based Explicit Tables] When a restriction on a table is specified to the server via the NspiGetMatches method, the server locates all the objects that meet the restriction criteria, and the list of the Minimal Entry IDs of those objects is constructed.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1908, MS-OXNSPI_R1909, MS-OXNSPI_R1910, MS-OXNSPI_R1911, MS-OXNSPI_R1912, MS-OXNSPI_R1913, MS-OXNSPI_R1914.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R510</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Restriction-Based Explicit Tables] This list [the list of the Minimal Entry IDs of those objects] is passed back to the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R1908, MS-OXNSPI_R1909, MS-OXNSPI_R1910, MS-OXNSPI_R1911, MS-OXNSPI_R1912, MS-OXNSPI_R1913, MS-OXNSPI_R1914.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R511</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Restriction-Based Explicit Tables] Therefore, these Explicit Tables [restriction-based explicit tables] are "snapshots" of the base table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R512</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.1</ns1:Doc_Sect>
		<ns1:Description>[In Restriction-Based Explicit Tables] That is, if an object is placed in an Explicit Table, even if the object is deleted from the server, the Minimal Entry ID that specifies that object will still be in the Explicit Table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R513</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Value-Based Explicit Tables] When a specific object in the address book and a property on that object is specified to the server via the NspiGetMatches method, the server reads the values of that property and constructs a list of Minimal Entry IDs based on a mapping between the values and other objects in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R514</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Value-Based Explicit Tables] This is not possible on all properties, only on those properties for which the server can establish a reference between the value of the property and some object in the address book.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R515</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Value-Based Explicit Tables] The Exchange Server NSPI Protocol does not constrain how a server establishes this reference [the reference between the value of the property and some object in the address book].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R516</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Value-Based Explicit Tables] Clients can identify the properties that the server can map by trying to obtain such a table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R517</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.2.2</ns1:Doc_Sect>
		<ns1:Description>[In Property Value-Based Explicit Tables] The server MUST return an error when it cannot make such a mapping, as specified in section 3.1.4.1.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R1140.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R518</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Specific Instantiations of Special Tables] The Exchange Server NSPI Protocol requires servers to maintain two special tables [Address Book Hierarchy Table and Address Creation Table], in addition to any tables they maintain for normal browsing.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R519</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Specific Instantiations of Special Tables] The two required special tables [Address Book Hierarchy Table and Address Creation Table] are specified in the following two sections.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R520</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.3.1</ns1:Doc_Sect>
		<ns1:Description>[In Address Book Hierarchy Table] Each server MUST maintain an address book hierarchy table, as specified in [MS-OXOABK] section 3.1.4.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R521</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.4.3.2</ns1:Doc_Sect>
		<ns1:Description>[In Address Creation Table] Each server MUST maintain an address creation table to clients, as specified in [MS-OXOABKT].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R522</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] In order to achieve the primary goal of the Exchange Server NSPI Protocol (browsing address lists), in addition to the concept of tables, a server MUST support the concept of position in Status-Based and Explicit Tables.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R523</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] Each such table has a Current Position, which specifies a specific row in the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R524</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] Methods such as NspiQueryRows return values based on the Current Position in the table, and methods such as NspiUpdateStat and NspiQueryRows modify the Current Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R525</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] Positioning in an Explicit Table is defined specifically in the semantics of the NSPI methods that operate on them.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R526</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] When specifying position in a STAT structure-based table, the client sets the CurrentRec, Delta, ContainerID, SortType, and SortLocale fields of the STAT structure to specify to the server the Current Position in the table at the beginning of an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R527</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] The server sets the CurrentRec, NumPos, and TotalRecs fields to specify to the client the Current Position in the table at the end of an NSPI method.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R528</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5</ns1:Doc_Sect>
		<ns1:Description>[In Positioning in a Table] There are two ways for the client to specify position in a STAT structure-based table in the Exchange Server NSPI Protocol: Absolute Positioning and Fractional Positioning.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R529</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The first form of specifying position in a STAT structure-based table is called Absolute Positioning.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R530</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The client specifies this type of positioning [Absolute Positioning] by setting any value in the field CurrentRec field other than MID_CURRENT.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1606</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server uses the following steps [step 1-9] to identify the Current Position specified by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R532</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 1] First, the server MUST determine the LCID that it [server] supports that is closest to the LCID specified by SortLocale.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R533</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 1] The server MAY choose this closest LCID in any way.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R535</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 2] The server sorts the objects in the address book container specified by ContainerID by the sort type specified in the SortType field and the LCID specified in step 1 of section 3.1.4.5.2.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1763.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1763</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server sorts the objects in the address book container specified by ContainerID by the sort type specified in the SortType field and the default LCID NSPI_DEFAULT_LOCALE.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R535:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R537</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 3] The server identifies the number of objects in the sorted table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R538</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 3] The server reports this [the number of objects in the sorted table] in the TotalRecs field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R540</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 4] The server locates the object specified by the CurrentRec field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R541</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 4] If the server cannot locate the object, the Current Position in the table is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R542</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 4] The server MUST support the special Minimal Entry ID MID_BEGINNING_OF_TABLE, as specified in section 2.2.1.8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1758</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server MUST support the special Minimal Entry ID MID_END_OF_TABLE, as specified in section 2.2.8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R544</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 5] The server verifies that the object located in step 4 is in the container specified by the ContainerID field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R545</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 5] If the server cannot verify this [the object specified by the CurrentRec field4 is in the container specified by the ContainerID field], the Current Position in the table is undefined.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R547</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 6] The server moves the Current Position by the number of rows specified by the absolute value of the Delta field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R548, MS-OXNSPI_R549, MS-OXNSPI_R550.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R548</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 6] If the value of Delta is negative, the Current Position is moved toward the beginning of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R549</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 6] If the value of Delta is positive, the Current Position is moved toward the end of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R550</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 6] A Delta with the value 0 results in no change to the Current Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1743</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 7] If applying the Delta as described in step 6 would move the Current Position to be before the first row of the table, the server sets the Current Position to the first row of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1744</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [If applying the Delta as described in step 6 would move the Current Position to be before the first row of the table, the server] sets the CurrentRec to the Minimal Entry ID of the object that occupies the first row of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R554</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 8] If applying the Delta as described in step 6 would move the Current Position to be after the end of the table, the server sets the Current Position to a location one row past the last valid row of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1704</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 8] If applying the Delta as described in step 6 would move the Current Position to be after the end of the table, the server sets the CurrentRec to the value MID_END_OF_TABLE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R556</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] [step 9] The server sets the field CurrentRec to the Minimal Entry ID of the object occupying the row specified by the Current Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R557</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server identifies the numeric row of the Current Position in the sorted table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R558</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] This numeric row [the numeric row of the Current Position in the sorted table] is 0-based.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R559</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] That is, the first valid row in the table has the numeric position 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R558.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R560</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] This [the first valid row in the table] is the Numeric Position of the Current Position of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R561</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server reports this [the Numeric Position of the Current Position of the table] in the NumPos field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R562</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] The server MAY report an approximate value for the Numeric Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by derived requirement: MS-OXNSPI_R1992.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R563</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.1</ns1:Doc_Sect>
		<ns1:Description>[In Absolute Positioning] Although the protocol places no boundary or requirements on the accuracy of the approximate value the server returns, it is recommended that implementations maximize the accuracy of the approximation to improve usability of the Exchange NSPI server for clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R564</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The second form of specifying position in a STAT structure-based table is called Fractional Positioning.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R565</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The client specifies this type of positioning [Fractional Positioning] by setting the field CurrentRec to the value MID_CURRENT.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R566</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] Fractional positioning is defined as only an approximation in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R567</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server MAY be inaccurate both in locating a row based on fractional positioning and in reporting the resultant actual fractional position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1609</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server uses the following steps [step 1-5] to identify the Current Position specified by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R569</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 1] First, the server identifies the LCID it [server] supports that is closest to the LCID specified by the SortLocale field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R570</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 1] The server MAY choose this closest LCID in any way.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R572</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 2] The server sorts the objects in the address book container specified by the ContainerID field by the sort type specified in the SortType field and the LCID specified in step 1 of section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R574</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 3] The server identifies the number of objects in the sorted table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R575</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 3] The server reports this [the number of objects] in the TotalRecs field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R577</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 4] The server calculates the Intended Numeric Position in the table as the TotalRecs reported by the server multiplied by the NumPos field of the STAT structure divided by the value of TotalRecs as specified by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R578</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 4] The value is truncated to its integral part.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R580</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [step 5] If the Intended Numeric Position thus calculated is greater than TotalRecs, the intended Intended Numeric Position is TotalRecs (that is, the last row in the table).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R581</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] After the server has identified the Intended Numeric Position, the server sets Numeric Position to an approximation of that value.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R582</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] Although the protocol places no boundary or requirements on the accuracy of the approximation the server uses to set the Numeric Position, it is recommended that implementations maximize accuracy of the approximation to improve usability of the server for clients.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R584</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server moves the Current Position to the row chosen in step 6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R586</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server moves the Current Position by the number of rows specified by the absolute value of the Delta field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R587, MS-OXNSPI_R588, MS-OXNSPI_R589.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R587</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] If the value of Delta is negative, the Current Position is moved toward the beginning of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R588</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] If the value of Delta is positive, the Current Position is moved toward the end of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R589</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] A Delta field with the value 0 results in no change to the Current Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1745</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] If applying the Delta as described in step 8 would move the Current Position to be before the beginning of the table, the server sets the Current Position to the beginning of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1746</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [If applying the Delta as described in step 8 would move the Current Position to be before the beginning of the table, the server] sets the CurrentRec field to the Minimal Entry ID of the object occupying the first row of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1747</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] If applying Delta as described in step 8 would move the Current Position to be after the end of the table, the server sets the Current Position to a location one row past the last valid row of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1748</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] [If applying Delta as described in step 8 would move the Current Position to be after the end of the table, the server] sets the CurrentRec to the value MID_END_OF_TABLE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R595</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server sets the field CurrentRec to the Minimal Entry ID of the object occupying the row specified by the Current Position.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R597</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server identifies the numeric row of the Current Position in the sorted table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R598</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] This numeric row [the numeric row of the Current Position] is 0-based.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R599</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] That is, the first valid row in the table has the numeric position 0.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirement: MS-OXNSPI_R598.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R600</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] This [the first valid row in the table] is the Numeric Position of the Current Position of the table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R601</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.5.2</ns1:Doc_Sect>
		<ns1:Description>[In Fractional Positioning] The server reports this [Numeric Position of the Current Position of the table] in the NumPos field of the STAT structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R602</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] Objects maintained by the server need to be identified in the Exchange Server NSPI Protocol.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1610</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] The Exchange Server NSPI Protocol makes use of the following three kinds of identifiers [Permanent Identifier, Ephemeral Identifier and Minimal Identifier], differentiated primarily by their intended lifespan.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R603</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] Permanent Identifier: Specifies a specific object across all NSPI sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R2001.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2001</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] The Permanent Identifiers of a specific object are same in two NSPI sessions.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R603:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R604</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Permanent Identifier] The display type of the object is included in the Permanent Identifier.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R605</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] Ephemeral Identifier: Specifies a specific object in a single NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R606</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Ephemeral Identifier] The display type of the object is included in the Ephemeral Identifier.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R607</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Ephemeral Identifier] A server MUST NOT change an object's Ephemeral Identifier during the lifetime of an NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1995.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1995</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] A server MUST NOT change an object's Ephemeral Identifier during two calls.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R607:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R608</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Ephemeral Identifier] If a server uses the same NSPI session GUID (that is, the GUID returned by the server in the pServerGuid output parameter of the NspiBind method) for multiple NSPI sessions, the server MUST use the same Ephemeral Identifier for the same specific object in both sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R609</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] Minimal Identifier: Specifies a specific object in a single NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R610</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Minimal Identifier] A server MUST NOT change an object's Minimal Entry ID during the lifetime of an NSPI session.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Partially verified by derived requirement: MS-OXNSPI_R1706.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1706</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] A server MUST NOT change an object's Minimal Entry ID between two calls in the lifetime of an NSPI session.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R610:p</ns1:Derived>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R611</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.6</ns1:Doc_Sect>
		<ns1:Description>[In Object Identity] [Minimal Identifier] If a server uses the same NSPI session GUID (that is, the GUID returned by the server in the in the pServerGuid output parameter of the NspiBind method) for multiple NSPI sessions, the server MUST use the same Minimal Identifier for the same specific object in all sessions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R612</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] Ambiguous name resolution (ANR) is a process by which a server maps a string to a specific object in a specific address book container.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R613</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The string is provided by the client and is interpreted by the server as specified in section 3.1.4.3.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
		<ns1:VerificationComment>Verified by requirements: MS-OXNSPI_R446, MS-OXNSPI_R447, MS-OXNSPI_R448, MS-OXNSPI_R450.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R614</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The specific algorithm used to map the string to an object is not prescribed by this protocol and is left to each server instance to define as local policy.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R615</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The intended usage is an end user of a computer program entering free-form text and finding a unique object in an address book most closely matching the user's requirements.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Non-testable</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R616</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The specific result of an ANR process is a Minimal Entry ID.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1611</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] There are three possible outcomes [MID_UNRESOLVED, MID_AMBIGUOUS and MID_RESOLVED] to the ANR process.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R618</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] If the server is unable to map the string to any objects in the address book, the result of the ANR process is the Minimal Entry ID with the value MID_UNRESOLVED.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R620</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] If the server is able to map the string to more than one object in the address book, the result of the ANR process is the Minimal Entry ID with the value MID_AMBIGUOUS.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R622</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] If the server is able to map the string to exactly one object in the address book, the result of the ANR process is the Minimal Entry ID with the value MID_RESOLVED.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R623</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The server MUST map the NULL string to the Minimal Entry ID MID_UNRESOLVED.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R624</ns1:REQ_ID>
		<ns1:Doc_Sect>3.1.4.7</ns1:Doc_Sect>
		<ns1:Description>[In Ambiguous Name Resolution] The server MUST map a zero-length string to the Minimal Entry ID MID_UNRESOLVED.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1495</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] In order to obtain any context handle to the server, the NspiBind method MUST be called initially.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1496</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] With the contextHandle parameter returned from this method [NspiBind], it is possible to call any associated methods on the handle, as described in section 4.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1497</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime that it [protocol MS-OXNSPI] is to perform a strict NDR data consistency check at target level 6.0, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1499</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime via the strict_context_handle attribute that it [protocol MS-OXNSPI] is to reject use of context handles created by a method of a different RPC interface than this one, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1500</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.4</ns1:Doc_Sect>
		<ns1:Description>[In Message Processing Events and Sequencing Rules] This protocol MUST indicate to the RPC runtime via the type_strict_context_handle attribute that it [protocol MS-OXNSPI] is to reject use of context handles created by a method that creates a different type of context handle, as specified in [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1501</ns1:REQ_ID>
		<ns1:Doc_Sect>3.2.5</ns1:Doc_Sect>
		<ns1:Description>[In Timer Events] For details about any transport-level timers, see [MS-RPCE].</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Client</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1527</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix B: Product Behavior] Unless otherwise specified, any statement of optional behavior in this specification that is prescribed using the terms SHOULD or SHOULD NOT implies product behavior in accordance with the SHOULD or SHOULD NOT prescription.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1528</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix B: Product Behavior] Unless otherwise specified, the term MAY implies that the product does not follow the prescription.</ns1:Description>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Informative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1877</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix B: Product Behavior] Implementation does support RPC over TCP. &lt;1&gt; Section 2.1: Exchange 2010 NSPI server using RPC over TCP.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1989:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R1878</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix B: Product Behavior] Implementation does not support RPC over TCP. &lt;1&gt; Section 2.1: Exchange 2013 NSPI server and  Exchange 2016 and Exchange 2019 Preview NSPI server does not using RPC over TCP.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1989:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003003</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not follow the ABNF format. &lt;2&gt; Section 2.2.9.3:  Exchange 2013, Exchange 2016 and Exchange 2019 Preview do not follow the ABNF format that is specified in [MS-OXOABK] section 2.2.1.1.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R412:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003004</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does follow the ABNF format. (Microsoft Exchange Server 2010 Service Pack 3 (SP3) follows this behavior).</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R412:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R748001</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does proceed as if the address book hierarchy table had no rows wheather the version number of the address book hierarchy table  matches this version number specified by lpVersion. &lt;3&gt; Section 3.1.4.1.3:  Exchange 2010, Exchange 2013, Exchange 2016 and Exchange 2019 Preview: the input parameter lpVersion does not impact the search results.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R748:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R750001</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not set the output parameter lpVersion to the version of the server's address book hierarchy table.&lt;4&gt; Section 3.1.4.1.3:  Exchange 2010, Exchange 2013, Exchange 2016, and Exchange 2019 Preview do not set the output parameter lpVersion to the version of the server's address book hierarchy table.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R750:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003005</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does return the value "ErrorsReturned" (0x00040380). &lt;5&gt; Section 3.1.4.1.7:  Microsoft Exchange Server 2010 Service Pack 3 (SP3), Exchange 2013, Exchange 2016, and Exchange 2019 Preview return "ErrorsReturned" (0x00040380).</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R882:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003007</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not add the values for PidTagUserX509Certificate and PidTagAddressBookX509Certificate properties specified in the input parameter pRow to the object specified by the field CurrentRec in the input parameter pStat.&lt;6&gt; Section 3.1.4.1.14:  Exchange 2010 SP3, Exchange 2013, Exchange 2016 and Exchange 2019 Preview do not add values for the PidTagUserX509Certificate and PidTagAddressBookX509Certificate properties.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1527:i, MS-OXNSPI_R1301:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003009</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does return "GeneralFailure" when modify either the PidTagAddressBookMember property or the PidTagAddressBookPublicDelegates property of any objects in the address book. &lt;7&gt; Section 3.1.4.1.15:  Exchange 2013  Exchange 2016 and Exchange 2019 PReview return "GeneralFailure" (0x80004005) when modification of either the PidTagAddressBookMember property ([MS-OXOABK] section 2.2.6.1) or the PidTagAddressBookPublicDelegates property ([MS-OXOABK] section 2.2.5.5) is attempted.</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1321:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXNSPI_R2003010</ns1:REQ_ID>
		<ns1:Doc_Sect>7</ns1:Doc_Sect>
		<ns1:Description>[In Appendix A: Product Behavior] Implementation does not modify any properties of any objects in the address book. (Microsoft Exchange Server 2010 Service Pack 3 (SP3) follows this behavior).</ns1:Description>
		<ns1:Derived>MS-OXNSPI_R1321:i</ns1:Derived>
		<ns1:Behavior>Product</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
		<ns1:VerificationComment>This requirement can be enabled/disabled in the deployment.ptfconfig file.</ns1:VerificationComment>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXOABKT_R302</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo PropertyRow_r format] The Property Added to PropertyRow_r of the flagTI_TEMPLATE 0x00000001 is PidTagTemplateData 0x00010102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXOABKT_R303</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.2</ns1:Doc_Sect>
		<ns1:Description>[In NspiGetTemplateInfo PropertyRow_r format]The Property Added to PropertyRow_r of the flagTI_SCRIPT 0x00000004 is PidTagScriptData 0x00040102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXOABK_R29</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Distinguished Names for Objects] [DNs(1) for specific objects have a strict format, as shown in the following table] When the object type is Address book container, the dn formats is addresslist-dn.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXOABK_R30</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.1.1</ns1:Doc_Sect>
		<ns1:Description>[In Distinguished Names for Objects] [DNs(1) for specific objects have a strict format, as shown in the following table] When the object type is Global Address List container, the dn formats is gal-addrlist-dn.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXOABK_R892</ns1:REQ_ID>
		<ns1:Doc_Sect>2.2.3.10</ns1:Doc_Sect>
		<ns1:Description>[In PidTagObjectType] If the Address Book object is DISTLIST, the value of the PidTagObjectType property is 0x00000008.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R897</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] Success (S_OK, SUCCESS_SUCCESS) will be returned, if the operation succeeded.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R898</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code Success is 0x00000000, %x00.00.00.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R899</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] GeneralFailure (E_FAIL, MAPI_E_CALL_FAILED, ecError, SYNC_E_ERROR) will be returned, if the operation failed for an unspecified reason.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R900</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code GeneralFailure is 0x80004005, %x05.40.00.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R903</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] InvalidParameter (E_INVALIDARG, MAPI_E_INVALID_PARAMETER, ecInvalidParam, ecInvalidSession, ecBadBuffer, SYNC_E_INVALID_PARAMETER) will be returned, if an invalid parameter was passed to a remote procedure call (RPC).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R904</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code InvalidParameter is 0x80070057, %x57.00.07.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R907</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] AccessDenied (E_ACCESSDENIED, MAPI_E_NO_ACCESS, ecaccessdenied, ecpropsecurityviolation) will be returned, if the caller does not have sufficient access rights to perform the operation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R908</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code AccessDenied is 0x80070005, %x05.00.07.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R927</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] NotSupported (MAPI_E_NO_SUPPORT, ecNotSupported, ecNotImplemented) will be returned, if the server does not support this method call.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R928</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code NotSupported is 0x80040102, %x02.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R937</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] InvalidObject(MAPI_E_INVALID_OBJECT, ecInvalidObject) will be returned, if a method call was made using a reference to an object that has been destroyed or is not in a viable state.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R938</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code InvalidObject is 0x80040108, %x08.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R947</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] OutOfResources(MAPI_E_NOT_ENOUGH_RESOURCES, ecInsufficientResrc) will be returned, if not enough of an unspecified resource was available to complete the operation.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R948</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code OutOfResources is 0x8004010E, %x0E.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R949</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] NotFound (MAPI_E_NOT_FOUND, ecNotFound, ecAttachNotFound, ecUnknownRecip, ecPropNotExistent) will be returned, if the requested object could not be found at the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R950</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code NotFound is 0x8004010F, %x0F.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R953</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] LogonFailed(MAPI_E_LOGON_FAILED, ecLoginFailure) will be returned, if a client was unable to log on to the server.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R954</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code LogonFailed is 0x80040111, %x11.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Unverified</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R965</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] TooComplex (MAPI_E_TOO_COMPLEX, ecTooComplex) will be returned, if the operation requested is too complex for the server to handle; often applied to restrictions.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R966</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code TooComplex is 0x80040117, %x17.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R973</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] InvalidCodepage (MAPI_E_UNKNOWN_CPID) will be returned, if the server is not configured to support the code page requested by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R974</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code InvalidCodepage is 0x8004011E, %x1E.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R975</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] InvalidLocale (MAPI_E_UNKNOWN_LCID) will be returned, if the server is not configured to support the locale requested by the client.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R976</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code InvalidLocale is 0x8004011F, %x1F.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R989</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] TableTooBig (MAPI_E_TABLE_TOO_BIG, ecTableTooBig) will be returned, if the table is too big for the requested operation to complete.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R990</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code TableTooBig is 0x80040403, %x03.04.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R991</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] InvalidBookmark (MAPI_E_INVALID_BOOKMARK, ecInvalidBookmark) will be returned, if the bookmark passed to a table operation was not created on the same table.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R992</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4</ns1:Doc_Sect>
		<ns1:Description>[In Error Codes] The numeric value (hex) for error code InvalidBookmark is 0x80040405, %x05.04.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2054</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Additional Error Codes] NotFound (MAPI_E_NOT_FOUND) will be returned, On get, indicates that the property or column has no value for this object.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2055</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4.2</ns1:Doc_Sect>
		<ns1:Description>[In Additional Error Codes] The numeric value (hex) for error code NotFound is 0x8004010F, %x0F.01.04.80.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2070</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Warning Codes] ErrorsReturned (MAPI_W_ERRORS_RETURNED, ecWarnWithErrors) will be returned, if a request involving multiple properties failed for one or more individual properties, while succeeding overall.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2071</ns1:REQ_ID>
		<ns1:Doc_Sect>2.4.3</ns1:Doc_Sect>
		<ns1:Description>[In Warning Codes] The numeric value (hex) for error code ErrorsReturned is 0x00040380, %x80.03.04.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Server</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R6</ns1:REQ_ID>
		<ns1:Doc_Sect>2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID Structure] A FlatUID structure is a GUID structure put into little-endian byte order.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R9</ns1:REQ_ID>
		<ns1:Doc_Sect>2.5.1</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID Structure] FlatUID (16 bytes):  A flat little-endian sequence used as a unique identifier in various structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R10</ns1:REQ_ID>
		<ns1:Doc_Sect>2.5.2</ns1:Doc_Sect>
		<ns1:Description>[In FlatUID_r Structure] FlatUID (16 bytes): A flat little-endian sequence used as a unique identifier in various structures.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R72</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.1</ns1:Doc_Sect>
		<ns1:Description>[In StandardPropertyRow Structure] Flag (1 byte): An unsigned integer.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R73</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.1</ns1:Doc_Sect>
		<ns1:Description>[In StandardPropertyRow Structure] Flag (1 byte): This value MUST be set to 0x00 to indicate that all property values are present and without error.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R75</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.1</ns1:Doc_Sect>
		<ns1:Description>[In StandardPropertyRow Structure] ValueArray (variable): At each position of the array, the structure will either be a PropertyValue structure, as specified in section 2.11.2.1, if the type of the corresponding property tag was specified, or a TypedPropertyValue structure, as specified in section 2.11.3, if the type of the corresponding property tag was PtypUnspecified (section 2.11.1).</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R82</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] Reserved (4 bytes): Servers MUST set this value to 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R83</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] ValueCount (4 bytes):  The number of property values represented in the ValueArray field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R84</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.1.3</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRow_r Structure] ValueCount (4 bytes): This value [ValueCount (4 bytes)] MUST NOT exceed 100,000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R95</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.2.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet Structure] RowCount (2 bytes): RowCount (2 bytes): An unsigned integer specifying the number of PropertyRow structures in the Rows field.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R97</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] RowCount (2 bytes):This value encodes the RowCount field of the PropertyRowSet structure, as specified in section 2.8.2.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R99</ns1:REQ_ID>
		<ns1:Doc_Sect>2.8.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyRowSet_r Structure] Rows (variable): This value encodes the rows field of the PropertyRowSet structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R187</ns1:REQ_ID>
		<ns1:Doc_Sect>2.10.1</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray Structure] Count (2 bytes): An unsigned integer, specifying the number of property tags to follow.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R189</ns1:REQ_ID>
		<ns1:Doc_Sect>2.10.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] Count (2 bytes): Encodes the Count field in the PropTagArray structure, as specified in section 2.10.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R191</ns1:REQ_ID>
		<ns1:Doc_Sect>2.10.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyTagArray_r Structure] PropertyTags (variable): Encodes the PropertyTags field of the PropTagArray structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2691</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypInteger32 (PT_LONG, PT_I4, int, ui4) is that 4 bytes; a 32-bit integer [MS-DTYP]: INT32 with Property Type Value 0x0003,%x03.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2698</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypBoolean (PT_BOOLEAN. bool) is that 1 byte, restricted to 1 or 0 [MS-DTYP]: BOOLEAN with Property Type Value 0x000B, %x0B.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2701</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypString8 is that variable size, a string of multi-byte characters in externally specified encoding with terminating null character (single 0 byte).PT_STRING8 with Property Type Value 0x001E, %z1E.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2707</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypBinary (PT_BINARY) is that variable size; a COUNT field followed by that many bytes with Property Type Value 0x0102,%x02.01.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2700</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypString (PT_UNICODE, string) is that Variable size; a string of Unicode characters in UTF-16LE format encoding with terminating null character (0x0000). with Property Type Value  0x001F,%x1F.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2702</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Data Types] PtypTime (PT_SYSTIME, time, datetime, datetime.tz, datetime.rfc1123, Date, time, time.tz) is that 8 bytes; a 64-bit integer representing the number of 100-nanosecond intervals since January 1, 1601 [MS-DTYP]: FILETIME with Property Type Value 0x0040,%x40.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2697</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Value Types] PtypErrorCode (PT_ERROR) is that 4 bytes; a 32-bit integer encoding error information as specified in section 2.4.1. with Property Type Value  0x000A,%x0A.00.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2716</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Value Types] PtypMultipleString8 (PT_MV_STRING8, mv.string) is  that variable size; a COUNT field followed by that many PtypString8 values with Property Type Value 0x101E,%x1E.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2719</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Value Types] PtypMultipleBinary (PT_MV_BINARY, mv.bin.hex) is  that variable size; a COUNT field followed by that many PtypBinary values with Property Type Value 0x1102,%x02.11.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R2715</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.1</ns1:Doc_Sect>
		<ns1:Description>[In Property Value Types] PtypMultipleString (PT_MV_UNICODE) is  that variable size; a COUNT field followed by that PtypString values with Property Type Value  0x101F,%x1F.10.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R456</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] PropertyTag (4 bytes): This value encodes the property tag with the value represented by the PropertyValue_r structure.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R457</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] Reserved (4 bytes):  All clients and servers MUST set this value to 0x00000000.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXCDATA_R458</ns1:REQ_ID>
		<ns1:Doc_Sect>2.11.2.2</ns1:Doc_Sect>
		<ns1:Description>[In PropertyValue_r Structure] PropertyValue (variable): This value encodes the PropertyValue field of the PropertyValue structure, as specified in section 2.11.2.1.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Adapter</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R4969</ns1:REQ_ID>
		<ns1:Doc_Sect>2.507</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookContainerId] Property ID: 0xFFFD.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R4970</ns1:REQ_ID>
		<ns1:Doc_Sect>2.507</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookContainerId] Data type: PtypInteger32, 0x0003.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R4981</ns1:REQ_ID>
		<ns1:Doc_Sect>2.509</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookDisplayNamePrintable] Property ID: 0x39FF.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R4982</ns1:REQ_ID>
		<ns1:Doc_Sect>2.509</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookDisplayNamePrintable] Data type: PtypString, 0x001F.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5163</ns1:REQ_ID>
		<ns1:Doc_Sect>2.549</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookObjectDistinguishedName] Property ID: 0x803C.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5164</ns1:REQ_ID>
		<ns1:Doc_Sect>2.549</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookObjectDistinguishedName] Data type: PtypString, 0x001F.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5309</ns1:REQ_ID>
		<ns1:Doc_Sect>2.570</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookX509Certificate] Property ID: 0x8C6A.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5310</ns1:REQ_ID>
		<ns1:Doc_Sect>2.570</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressBookX509Certificate] Data type: PtypMultipleBinary, 0x1102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5316</ns1:REQ_ID>
		<ns1:Doc_Sect>2.571</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressType] Property ID: 0x3002</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5317</ns1:REQ_ID>
		<ns1:Doc_Sect>2.571</ns1:Doc_Sect>
		<ns1:Description>[In PidTagAddressType] Data type: PtypString, 0x001F</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5798</ns1:REQ_ID>
		<ns1:Doc_Sect>2.638</ns1:Doc_Sect>
		<ns1:Description>[In PidTagContainerContents] Description: Always empty. An NSPI server defines this value for distribution lists and it is not present for other objects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5799</ns1:REQ_ID>
		<ns1:Doc_Sect>2.638</ns1:Doc_Sect>
		<ns1:Description>[In PidTagContainerContents] Property ID: 0x360F.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5800</ns1:REQ_ID>
		<ns1:Doc_Sect>2.638</ns1:Doc_Sect>
		<ns1:Description>[In PidTagContainerContents] Data type: PtypEmbeddedTable, 0x000D</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5806</ns1:REQ_ID>
		<ns1:Doc_Sect>2.639</ns1:Doc_Sect>
		<ns1:Description>[In PidTagContainerFlags] Property ID: 0x3600.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5807</ns1:REQ_ID>
		<ns1:Doc_Sect>2.639</ns1:Doc_Sect>
		<ns1:Description>[In PidTagContainerFlags] Data type: PtypInteger32, 0x0003.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R5986</ns1:REQ_ID>
		<ns1:Doc_Sect>2.667</ns1:Doc_Sect>
		<ns1:Description>[In PidTagDepartmentName] Property ID: 0x3A18.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6014</ns1:REQ_ID>
		<ns1:Doc_Sect>2.671</ns1:Doc_Sect>
		<ns1:Description>[In PidTagDisplayName] Property ID: 0x3001.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6015</ns1:REQ_ID>
		<ns1:Doc_Sect>2.671</ns1:Doc_Sect>
		<ns1:Description>[In PidTagDisplayName] Data type: PtypString, 0x001F.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6035</ns1:REQ_ID>
		<ns1:Doc_Sect>2.674</ns1:Doc_Sect>
		<ns1:Description>[In PidTagDisplayType] Property ID: 0x3900.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6036</ns1:REQ_ID>
		<ns1:Doc_Sect>2.674</ns1:Doc_Sect>
		<ns1:Description>[In PidTagDisplayType] Data type: PtypInteger32, 0x0003.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6056</ns1:REQ_ID>
		<ns1:Doc_Sect>2.676</ns1:Doc_Sect>
		<ns1:Description>[In PidTagEmailAddress] Property ID: 0x3003</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6057</ns1:REQ_ID>
		<ns1:Doc_Sect>2.676</ns1:Doc_Sect>
		<ns1:Description>[In PidTagEmailAddress] Data type: PtypString, 0x001F</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6100</ns1:REQ_ID>
		<ns1:Doc_Sect>2.678</ns1:Doc_Sect>
		<ns1:Description>[In PidTagEntryId] Property ID: 0x0FFF.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6101</ns1:REQ_ID>
		<ns1:Doc_Sect>2.678</ns1:Doc_Sect>
		<ns1:Description>[In PidTagEntryId] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6605</ns1:REQ_ID>
		<ns1:Doc_Sect>2.735</ns1:Doc_Sect>
		<ns1:Description>[In PidTagInitialDetailsPane] Property ID: 0x3F08.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6606</ns1:REQ_ID>
		<ns1:Doc_Sect>2.735</ns1:Doc_Sect>
		<ns1:Description>[In PidTagInitialDetailsPane] Data type: PtypInteger32, 0x0003.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6626</ns1:REQ_ID>
		<ns1:Doc_Sect>2.738</ns1:Doc_Sect>
		<ns1:Description>[In PidTagInstanceKey] Property ID: 0x0FF6.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6627</ns1:REQ_ID>
		<ns1:Doc_Sect>2.738</ns1:Doc_Sect>
		<ns1:Description>[In PidTagInstanceKey] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6889</ns1:REQ_ID>
		<ns1:Doc_Sect>2.775</ns1:Doc_Sect>
		<ns1:Description>[In PidTagMappingSignature] Description: A 16-byte constant that is present on all Address Book objects.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6890</ns1:REQ_ID>
		<ns1:Doc_Sect>2.775</ns1:Doc_Sect>
		<ns1:Description>[In PidTagMappingSignature] Property ID: 0x0FF8.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R6891</ns1:REQ_ID>
		<ns1:Doc_Sect>2.775</ns1:Doc_Sect>
		<ns1:Description>[In PidTagMappingSignature] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7109</ns1:REQ_ID>
		<ns1:Doc_Sect>2.808</ns1:Doc_Sect>
		<ns1:Description>[In PidTagObjectType] Property ID: 0x0FFE.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7110</ns1:REQ_ID>
		<ns1:Doc_Sect>2.808</ns1:Doc_Sect>
		<ns1:Description>[In PidTagObjectType] Data type: PtypInteger32, 0x0003.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7116</ns1:REQ_ID>
		<ns1:Doc_Sect>2.809</ns1:Doc_Sect>
		<ns1:Description>[In PidTagOfficeLocation] Property ID: 0x3A19.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7545</ns1:REQ_ID>
		<ns1:Doc_Sect>2.865</ns1:Doc_Sect>
		<ns1:Description>[In PidTagPrimaryTelephoneNumber] Property ID: 0x3A1A.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7825</ns1:REQ_ID>
		<ns1:Doc_Sect>2.905</ns1:Doc_Sect>
		<ns1:Description>[In PidTagRecordKey] Property ID: 0x0FF9.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R7826</ns1:REQ_ID>
		<ns1:Doc_Sect>2.905</ns1:Doc_Sect>
		<ns1:Description>[In PidTagRecordKey] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8385</ns1:REQ_ID>
		<ns1:Doc_Sect>2.992</ns1:Doc_Sect>
		<ns1:Description>[In PidTagSearchKey] Property ID: 0x300B</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8386</ns1:REQ_ID>
		<ns1:Doc_Sect>2.992</ns1:Doc_Sect>
		<ns1:Description>[In PidTagSearchKey] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8770</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1038</ns1:Doc_Sect>
		<ns1:Description>[In PidTagTemplateid] Property ID: 0x3902.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8771</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1038</ns1:Doc_Sect>
		<ns1:Description>[In PidTagTemplateid] Data type: PtypBinary, 0x0102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8815</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1044</ns1:Doc_Sect>
		<ns1:Description>[In PidTagTransmittableDisplayName] Property ID: 0x3A20.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8816</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1044</ns1:Doc_Sect>
		<ns1:Description>[In PidTagTransmittableDisplayName] Data type: PtypString, 0x001F.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8875</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1049</ns1:Doc_Sect>
		<ns1:Description>[In PidTagUserX509Certificate] Property ID: 0x3A70.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
	<ns1:Requirement>
		<ns1:REQ_ID>MS-OXPROPS_R8876</ns1:REQ_ID>
		<ns1:Doc_Sect>2.1049</ns1:Doc_Sect>
		<ns1:Description>[In PidTagUserX509Certificate] Data type: PtypMultipleBinary, 0x1102.</ns1:Description>
		<ns1:Behavior>Protocol</ns1:Behavior>
		<ns1:Scope>Both</ns1:Scope>
		<ns1:IsNormative>Normative</ns1:IsNormative>
		<ns1:Verification>Test Case</ns1:Verification>
	</ns1:Requirement>
</ns1:ReqTable>